"use strict";(self.webpackChunkestuary_documentation=self.webpackChunkestuary_documentation||[]).push([[4059],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>g});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),u=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=u(e.components);return a.createElement(o.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),d=u(n),g=r,c=d["".concat(o,".").concat(g)]||d[g]||m[g]||i;return n?a.createElement(c,l(l({ref:t},s),{},{components:n})):a.createElement(c,l({ref:t},s))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=d;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p.mdxType="string"==typeof e?e:r,l[1]=p;for(var u=2;u<i;u++)l[u]=n[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},93234:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>p,toc:()=>u});var a=n(87462),r=(n(67294),n(3905));const i={},l="PeeringApi",p={unversionedId:"java/docs/PeeringApi",id:"java/docs/PeeringApi",title:"PeeringApi",description:"All URIs are relative to https://api.estuary.tech",source:"@site/clients/java/docs/PeeringApi.md",sourceDirName:"java/docs",slug:"/java/docs/PeeringApi",permalink:"/estuary-documentation/clients/java/docs/PeeringApi",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"NetApi",permalink:"/estuary-documentation/clients/java/docs/NetApi"},next:{title:"PeersApi",permalink:"/estuary-documentation/clients/java/docs/PeersApi"}},o={},u=[{value:"Example",id:"example",level:3},{value:"Parameters",id:"parameters",level:3},{value:"Return type",id:"return-type",level:3},{value:"Authorization",id:"authorization",level:3},{value:"HTTP request headers",id:"http-request-headers",level:3},{value:"Example",id:"example-1",level:3},{value:"Parameters",id:"parameters-1",level:3},{value:"Return type",id:"return-type-1",level:3},{value:"Authorization",id:"authorization-1",level:3},{value:"HTTP request headers",id:"http-request-headers-1",level:3},{value:"Example",id:"example-2",level:3},{value:"Parameters",id:"parameters-2",level:3},{value:"Return type",id:"return-type-2",level:3},{value:"Authorization",id:"authorization-2",level:3},{value:"HTTP request headers",id:"http-request-headers-2",level:3},{value:"Example",id:"example-3",level:3},{value:"Parameters",id:"parameters-3",level:3},{value:"Return type",id:"return-type-3",level:3},{value:"Authorization",id:"authorization-3",level:3},{value:"HTTP request headers",id:"http-request-headers-3",level:3},{value:"Example",id:"example-4",level:3},{value:"Parameters",id:"parameters-4",level:3},{value:"Return type",id:"return-type-4",level:3},{value:"Authorization",id:"authorization-4",level:3},{value:"HTTP request headers",id:"http-request-headers-4",level:3},{value:"Example",id:"example-5",level:3},{value:"Parameters",id:"parameters-5",level:3},{value:"Return type",id:"return-type-5",level:3},{value:"Authorization",id:"authorization-5",level:3},{value:"HTTP request headers",id:"http-request-headers-5",level:3}],s={toc:u};function m(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"peeringapi"},"PeeringApi"),(0,r.kt)("p",null,"All URIs are relative to ",(0,r.kt)("em",{parentName:"p"},(0,r.kt)("a",{parentName:"em",href:"https://api.estuary.tech"},"https://api.estuary.tech"))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Method"),(0,r.kt)("th",{parentName:"tr",align:null},"HTTP request"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/estuary-documentation/clients/java/docs/PeeringApi#adminPeeringPeersDelete"},(0,r.kt)("strong",{parentName:"a"},"adminPeeringPeersDelete"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"DELETE")," /admin/peering/peers"),(0,r.kt)("td",{parentName:"tr",align:null},"Remove peers on Peering Service")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/estuary-documentation/clients/java/docs/PeeringApi#adminPeeringPeersGet"},(0,r.kt)("strong",{parentName:"a"},"adminPeeringPeersGet"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"GET")," /admin/peering/peers"),(0,r.kt)("td",{parentName:"tr",align:null},"List all Peering peers")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/estuary-documentation/clients/java/docs/PeeringApi#adminPeeringPeersPost"},(0,r.kt)("strong",{parentName:"a"},"adminPeeringPeersPost"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"POST")," /admin/peering/peers"),(0,r.kt)("td",{parentName:"tr",align:null},"Add peers on Peering Service")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/estuary-documentation/clients/java/docs/PeeringApi#adminPeeringStartPost"},(0,r.kt)("strong",{parentName:"a"},"adminPeeringStartPost"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"POST")," /admin/peering/start"),(0,r.kt)("td",{parentName:"tr",align:null},"Start Peering")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/estuary-documentation/clients/java/docs/PeeringApi#adminPeeringStatusGet"},(0,r.kt)("strong",{parentName:"a"},"adminPeeringStatusGet"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"GET")," /admin/peering/status"),(0,r.kt)("td",{parentName:"tr",align:null},"Check Peering Status")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/estuary-documentation/clients/java/docs/PeeringApi#adminPeeringStopPost"},(0,r.kt)("strong",{parentName:"a"},"adminPeeringStopPost"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"POST")," /admin/peering/stop"),(0,r.kt)("td",{parentName:"tr",align:null},"Stop Peering")))),(0,r.kt)("a",{name:"adminPeeringPeersDelete"}),"# **adminPeeringPeersDelete** > adminPeeringPeersDelete(body)",(0,r.kt)("p",null,"Remove peers on Peering Service"),(0,r.kt)("p",null,"This endpoint can be used to remove a Peer from the Peering Service"),(0,r.kt)("h3",{id:"example"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PeeringApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure API key authorization: bearerAuth\nApiKeyAuth bearerAuth = (ApiKeyAuth) defaultClient.getAuthentication("bearerAuth");\nbearerAuth.setApiKey("YOUR API KEY");\n// Uncomment the following line to set a prefix for the API key, e.g. "Token" (defaults to null)\n//bearerAuth.setApiKeyPrefix("Token");\n\nPeeringApi apiInstance = new PeeringApi();\nList<String> body = Arrays.asList(new List<String>()); // List<String> | Peer ids\ntry {\n    apiInstance.adminPeeringPeersDelete(body);\n} catch (ApiException e) {\n    System.err.println("Exception when calling PeeringApi#adminPeeringPeersDelete");\n    e.printStackTrace();\n}\n')),(0,r.kt)("h3",{id:"parameters"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"body")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"List","<","String",">")),(0,r.kt)("td",{parentName:"tr",align:null},"Peer ids"),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("h3",{id:"return-type"},"Return type"),(0,r.kt)("p",null,"null (empty response body)"),(0,r.kt)("h3",{id:"authorization"},"Authorization"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/java/#bearerAuth"},"bearerAuth")),(0,r.kt)("h3",{id:"http-request-headers"},"HTTP request headers"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Content-Type"),": Not defined"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Accept"),": application/json")),(0,r.kt)("a",{name:"adminPeeringPeersGet"}),"# **adminPeeringPeersGet** > adminPeeringPeersGet()",(0,r.kt)("p",null,"List all Peering peers"),(0,r.kt)("p",null,"This endpoint can be used to list all peers on Peering Service"),(0,r.kt)("h3",{id:"example-1"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PeeringApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure API key authorization: bearerAuth\nApiKeyAuth bearerAuth = (ApiKeyAuth) defaultClient.getAuthentication("bearerAuth");\nbearerAuth.setApiKey("YOUR API KEY");\n// Uncomment the following line to set a prefix for the API key, e.g. "Token" (defaults to null)\n//bearerAuth.setApiKeyPrefix("Token");\n\nPeeringApi apiInstance = new PeeringApi();\ntry {\n    apiInstance.adminPeeringPeersGet();\n} catch (ApiException e) {\n    System.err.println("Exception when calling PeeringApi#adminPeeringPeersGet");\n    e.printStackTrace();\n}\n')),(0,r.kt)("h3",{id:"parameters-1"},"Parameters"),(0,r.kt)("p",null,"This endpoint does not need any parameter."),(0,r.kt)("h3",{id:"return-type-1"},"Return type"),(0,r.kt)("p",null,"null (empty response body)"),(0,r.kt)("h3",{id:"authorization-1"},"Authorization"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/java/#bearerAuth"},"bearerAuth")),(0,r.kt)("h3",{id:"http-request-headers-1"},"HTTP request headers"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Content-Type"),": Not defined"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Accept"),": application/json")),(0,r.kt)("a",{name:"adminPeeringPeersPost"}),"# **adminPeeringPeersPost** > adminPeeringPeersPost()",(0,r.kt)("p",null,"Add peers on Peering Service"),(0,r.kt)("p",null,"This endpoint can be used to add a Peer from the Peering Service"),(0,r.kt)("h3",{id:"example-2"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PeeringApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure API key authorization: bearerAuth\nApiKeyAuth bearerAuth = (ApiKeyAuth) defaultClient.getAuthentication("bearerAuth");\nbearerAuth.setApiKey("YOUR API KEY");\n// Uncomment the following line to set a prefix for the API key, e.g. "Token" (defaults to null)\n//bearerAuth.setApiKeyPrefix("Token");\n\nPeeringApi apiInstance = new PeeringApi();\ntry {\n    apiInstance.adminPeeringPeersPost();\n} catch (ApiException e) {\n    System.err.println("Exception when calling PeeringApi#adminPeeringPeersPost");\n    e.printStackTrace();\n}\n')),(0,r.kt)("h3",{id:"parameters-2"},"Parameters"),(0,r.kt)("p",null,"This endpoint does not need any parameter."),(0,r.kt)("h3",{id:"return-type-2"},"Return type"),(0,r.kt)("p",null,"null (empty response body)"),(0,r.kt)("h3",{id:"authorization-2"},"Authorization"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/java/#bearerAuth"},"bearerAuth")),(0,r.kt)("h3",{id:"http-request-headers-2"},"HTTP request headers"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Content-Type"),": Not defined"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Accept"),": application/json")),(0,r.kt)("a",{name:"adminPeeringStartPost"}),"# **adminPeeringStartPost** > adminPeeringStartPost()",(0,r.kt)("p",null,"Start Peering"),(0,r.kt)("p",null,"This endpoint can be used to start the Peering Service"),(0,r.kt)("h3",{id:"example-3"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PeeringApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure API key authorization: bearerAuth\nApiKeyAuth bearerAuth = (ApiKeyAuth) defaultClient.getAuthentication("bearerAuth");\nbearerAuth.setApiKey("YOUR API KEY");\n// Uncomment the following line to set a prefix for the API key, e.g. "Token" (defaults to null)\n//bearerAuth.setApiKeyPrefix("Token");\n\nPeeringApi apiInstance = new PeeringApi();\ntry {\n    apiInstance.adminPeeringStartPost();\n} catch (ApiException e) {\n    System.err.println("Exception when calling PeeringApi#adminPeeringStartPost");\n    e.printStackTrace();\n}\n')),(0,r.kt)("h3",{id:"parameters-3"},"Parameters"),(0,r.kt)("p",null,"This endpoint does not need any parameter."),(0,r.kt)("h3",{id:"return-type-3"},"Return type"),(0,r.kt)("p",null,"null (empty response body)"),(0,r.kt)("h3",{id:"authorization-3"},"Authorization"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/java/#bearerAuth"},"bearerAuth")),(0,r.kt)("h3",{id:"http-request-headers-3"},"HTTP request headers"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Content-Type"),": Not defined"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Accept"),": application/json")),(0,r.kt)("a",{name:"adminPeeringStatusGet"}),"# **adminPeeringStatusGet** > adminPeeringStatusGet()",(0,r.kt)("p",null,"Check Peering Status"),(0,r.kt)("p",null,"This endpoint can be used to check the Peering status"),(0,r.kt)("h3",{id:"example-4"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PeeringApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure API key authorization: bearerAuth\nApiKeyAuth bearerAuth = (ApiKeyAuth) defaultClient.getAuthentication("bearerAuth");\nbearerAuth.setApiKey("YOUR API KEY");\n// Uncomment the following line to set a prefix for the API key, e.g. "Token" (defaults to null)\n//bearerAuth.setApiKeyPrefix("Token");\n\nPeeringApi apiInstance = new PeeringApi();\ntry {\n    apiInstance.adminPeeringStatusGet();\n} catch (ApiException e) {\n    System.err.println("Exception when calling PeeringApi#adminPeeringStatusGet");\n    e.printStackTrace();\n}\n')),(0,r.kt)("h3",{id:"parameters-4"},"Parameters"),(0,r.kt)("p",null,"This endpoint does not need any parameter."),(0,r.kt)("h3",{id:"return-type-4"},"Return type"),(0,r.kt)("p",null,"null (empty response body)"),(0,r.kt)("h3",{id:"authorization-4"},"Authorization"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/java/#bearerAuth"},"bearerAuth")),(0,r.kt)("h3",{id:"http-request-headers-4"},"HTTP request headers"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Content-Type"),": Not defined"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Accept"),": application/json")),(0,r.kt)("a",{name:"adminPeeringStopPost"}),"# **adminPeeringStopPost** > adminPeeringStopPost()",(0,r.kt)("p",null,"Stop Peering"),(0,r.kt)("p",null,"This endpoint can be used to stop the Peering Service"),(0,r.kt)("h3",{id:"example-5"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PeeringApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure API key authorization: bearerAuth\nApiKeyAuth bearerAuth = (ApiKeyAuth) defaultClient.getAuthentication("bearerAuth");\nbearerAuth.setApiKey("YOUR API KEY");\n// Uncomment the following line to set a prefix for the API key, e.g. "Token" (defaults to null)\n//bearerAuth.setApiKeyPrefix("Token");\n\nPeeringApi apiInstance = new PeeringApi();\ntry {\n    apiInstance.adminPeeringStopPost();\n} catch (ApiException e) {\n    System.err.println("Exception when calling PeeringApi#adminPeeringStopPost");\n    e.printStackTrace();\n}\n')),(0,r.kt)("h3",{id:"parameters-5"},"Parameters"),(0,r.kt)("p",null,"This endpoint does not need any parameter."),(0,r.kt)("h3",{id:"return-type-5"},"Return type"),(0,r.kt)("p",null,"null (empty response body)"),(0,r.kt)("h3",{id:"authorization-5"},"Authorization"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/java/#bearerAuth"},"bearerAuth")),(0,r.kt)("h3",{id:"http-request-headers-5"},"HTTP request headers"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Content-Type"),": Not defined"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Accept"),": application/json")))}m.isMDXComponent=!0}}]);