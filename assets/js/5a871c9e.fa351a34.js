"use strict";(self.webpackChunkestuary_documentation=self.webpackChunkestuary_documentation||[]).push([[3978],{3905:(t,e,n)=>{n.d(e,{Zo:()=>d,kt:()=>k});var a=n(67294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function l(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function o(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?l(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function i(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},l=Object.keys(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var p=a.createContext({}),u=function(t){var e=a.useContext(p),n=e;return t&&(n="function"==typeof t?t(e):o(o({},e),t)),n},d=function(t){var e=u(t.components);return a.createElement(p.Provider,{value:e},t.children)},s={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},m=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,l=t.originalType,p=t.parentName,d=i(t,["components","mdxType","originalType","parentName"]),m=u(n),k=r,c=m["".concat(p,".").concat(k)]||m[k]||s[k]||l;return n?a.createElement(c,o(o({ref:e},d),{},{components:n})):a.createElement(c,o({ref:e},d))}));function k(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=n.length,o=new Array(l);o[0]=m;var i={};for(var p in e)hasOwnProperty.call(e,p)&&(i[p]=e[p]);i.originalType=t,i.mdxType="string"==typeof t?t:r,o[1]=i;for(var u=2;u<l;u++)o[u]=n[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},82319:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>p,contentTitle:()=>o,default:()=>s,frontMatter:()=>l,metadata:()=>i,toc:()=>u});var a=n(87462),r=(n(67294),n(3905));const l={},o="WWW::SwaggerClient::ContentApi",i={unversionedId:"perl/docs/ContentApi",id:"perl/docs/ContentApi",title:"WWW::SwaggerClient::ContentApi",description:"Load the API package",source:"@site/clients/perl/docs/ContentApi.md",sourceDirName:"perl/docs",slug:"/perl/docs/ContentApi",permalink:"/estuary-documentation/clients/perl/docs/ContentApi",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"WWW::SwaggerClient::Object::CollectionsCollection",permalink:"/estuary-documentation/clients/perl/docs/CollectionsCollection"},next:{title:"WWW::SwaggerClient::DealsApi",permalink:"/estuary-documentation/clients/perl/docs/DealsApi"}},p={},u=[{value:"Load the API package",id:"load-the-api-package",level:2},{value:"Example",id:"example",level:3},{value:"Parameters",id:"parameters",level:3},{value:"Return type",id:"return-type",level:3},{value:"Authorization",id:"authorization",level:3},{value:"HTTP request headers",id:"http-request-headers",level:3},{value:"Example",id:"example-1",level:3},{value:"Parameters",id:"parameters-1",level:3},{value:"Return type",id:"return-type-1",level:3},{value:"Authorization",id:"authorization-1",level:3},{value:"HTTP request headers",id:"http-request-headers-1",level:3},{value:"Example",id:"example-2",level:3},{value:"Parameters",id:"parameters-2",level:3},{value:"Return type",id:"return-type-2",level:3},{value:"Authorization",id:"authorization-2",level:3},{value:"HTTP request headers",id:"http-request-headers-2",level:3},{value:"Example",id:"example-3",level:3},{value:"Parameters",id:"parameters-3",level:3},{value:"Return type",id:"return-type-3",level:3},{value:"Authorization",id:"authorization-3",level:3},{value:"HTTP request headers",id:"http-request-headers-3",level:3},{value:"Example",id:"example-4",level:3},{value:"Parameters",id:"parameters-4",level:3},{value:"Return type",id:"return-type-4",level:3},{value:"Authorization",id:"authorization-4",level:3},{value:"HTTP request headers",id:"http-request-headers-4",level:3},{value:"Example",id:"example-5",level:3},{value:"Parameters",id:"parameters-5",level:3},{value:"Return type",id:"return-type-5",level:3},{value:"Authorization",id:"authorization-5",level:3},{value:"HTTP request headers",id:"http-request-headers-5",level:3},{value:"Example",id:"example-6",level:3},{value:"Parameters",id:"parameters-6",level:3},{value:"Return type",id:"return-type-6",level:3},{value:"Authorization",id:"authorization-6",level:3},{value:"HTTP request headers",id:"http-request-headers-6",level:3},{value:"Example",id:"example-7",level:3},{value:"Parameters",id:"parameters-7",level:3},{value:"Return type",id:"return-type-7",level:3},{value:"Authorization",id:"authorization-7",level:3},{value:"HTTP request headers",id:"http-request-headers-7",level:3},{value:"Example",id:"example-8",level:3},{value:"Parameters",id:"parameters-8",level:3},{value:"Return type",id:"return-type-8",level:3},{value:"Authorization",id:"authorization-8",level:3},{value:"HTTP request headers",id:"http-request-headers-8",level:3},{value:"Example",id:"example-9",level:3},{value:"Parameters",id:"parameters-9",level:3},{value:"Return type",id:"return-type-9",level:3},{value:"Authorization",id:"authorization-9",level:3},{value:"HTTP request headers",id:"http-request-headers-9",level:3},{value:"Example",id:"example-10",level:3},{value:"Parameters",id:"parameters-10",level:3},{value:"Return type",id:"return-type-10",level:3},{value:"Authorization",id:"authorization-10",level:3},{value:"HTTP request headers",id:"http-request-headers-10",level:3},{value:"Example",id:"example-11",level:3},{value:"Parameters",id:"parameters-11",level:3},{value:"Return type",id:"return-type-11",level:3},{value:"Authorization",id:"authorization-11",level:3},{value:"HTTP request headers",id:"http-request-headers-11",level:3},{value:"Example",id:"example-12",level:3},{value:"Parameters",id:"parameters-12",level:3},{value:"Return type",id:"return-type-12",level:3},{value:"Authorization",id:"authorization-12",level:3},{value:"HTTP request headers",id:"http-request-headers-12",level:3},{value:"Example",id:"example-13",level:3},{value:"Parameters",id:"parameters-13",level:3},{value:"Return type",id:"return-type-13",level:3},{value:"Authorization",id:"authorization-13",level:3},{value:"HTTP request headers",id:"http-request-headers-13",level:3},{value:"Example",id:"example-14",level:3},{value:"Parameters",id:"parameters-14",level:3},{value:"Return type",id:"return-type-14",level:3},{value:"Authorization",id:"authorization-14",level:3},{value:"HTTP request headers",id:"http-request-headers-14",level:3},{value:"Example",id:"example-15",level:3},{value:"Parameters",id:"parameters-15",level:3},{value:"Return type",id:"return-type-15",level:3},{value:"Authorization",id:"authorization-15",level:3},{value:"HTTP request headers",id:"http-request-headers-15",level:3},{value:"Example",id:"example-16",level:3},{value:"Parameters",id:"parameters-16",level:3},{value:"Return type",id:"return-type-16",level:3},{value:"Authorization",id:"authorization-16",level:3},{value:"HTTP request headers",id:"http-request-headers-16",level:3}],d={toc:u};function s(t){let{components:e,...n}=t;return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"wwwswaggerclientcontentapi"},"WWW::SwaggerClient::ContentApi"),(0,r.kt)("h2",{id:"load-the-api-package"},"Load the API package"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-perl"},"use WWW::SwaggerClient::Object::ContentApi;\n")),(0,r.kt)("p",null,"All URIs are relative to ",(0,r.kt)("em",{parentName:"p"},(0,r.kt)("a",{parentName:"em",href:"https://api.estuary.tech"},"https://api.estuary.tech"))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Method"),(0,r.kt)("th",{parentName:"tr",align:null},"HTTP request"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/estuary-documentation/clients/perl/docs/ContentApi#content_add_car_post"},(0,r.kt)("strong",{parentName:"a"},"content_add_car_post"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"POST")," /content/add-car"),(0,r.kt)("td",{parentName:"tr",align:null},"Add Car object")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/estuary-documentation/clients/perl/docs/ContentApi#content_add_ipfs_post"},(0,r.kt)("strong",{parentName:"a"},"content_add_ipfs_post"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"POST")," /content/add-ipfs"),(0,r.kt)("td",{parentName:"tr",align:null},"Add IPFS object")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/estuary-documentation/clients/perl/docs/ContentApi#content_add_post"},(0,r.kt)("strong",{parentName:"a"},"content_add_post"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"POST")," /content/add"),(0,r.kt)("td",{parentName:"tr",align:null},"Add new content")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/estuary-documentation/clients/perl/docs/ContentApi#content_aggregated_content_get"},(0,r.kt)("strong",{parentName:"a"},"content_aggregated_content_get"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"GET")," /content/aggregated/{content}"),(0,r.kt)("td",{parentName:"tr",align:null},"Get aggregated content stats")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/estuary-documentation/clients/perl/docs/ContentApi#content_all_deals_get"},(0,r.kt)("strong",{parentName:"a"},"content_all_deals_get"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"GET")," /content/all-deals"),(0,r.kt)("td",{parentName:"tr",align:null},"Get all deals for a user")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/estuary-documentation/clients/perl/docs/ContentApi#content_bw_usage_content_get"},(0,r.kt)("strong",{parentName:"a"},"content_bw_usage_content_get"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"GET")," /content/bw-usage/{content}"),(0,r.kt)("td",{parentName:"tr",align:null},"Get content bandwidth")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/estuary-documentation/clients/perl/docs/ContentApi#content_create_post"},(0,r.kt)("strong",{parentName:"a"},"content_create_post"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"POST")," /content/create"),(0,r.kt)("td",{parentName:"tr",align:null},"Add a new content")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/estuary-documentation/clients/perl/docs/ContentApi#content_deals_get"},(0,r.kt)("strong",{parentName:"a"},"content_deals_get"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"GET")," /content/deals"),(0,r.kt)("td",{parentName:"tr",align:null},"Content with deals")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/estuary-documentation/clients/perl/docs/ContentApi#content_ensure_replication_datacid_get"},(0,r.kt)("strong",{parentName:"a"},"content_ensure_replication_datacid_get"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"GET")," /content/ensure-replication/{datacid}"),(0,r.kt)("td",{parentName:"tr",align:null},"Ensure Replication")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/estuary-documentation/clients/perl/docs/ContentApi#content_failures_content_get"},(0,r.kt)("strong",{parentName:"a"},"content_failures_content_get"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"GET")," /content/failures/{content}"),(0,r.kt)("td",{parentName:"tr",align:null},"List all failures for a content")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/estuary-documentation/clients/perl/docs/ContentApi#content_id_get"},(0,r.kt)("strong",{parentName:"a"},"content_id_get"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"GET")," /content/{id}"),(0,r.kt)("td",{parentName:"tr",align:null},"Content")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/estuary-documentation/clients/perl/docs/ContentApi#content_importdeal_post"},(0,r.kt)("strong",{parentName:"a"},"content_importdeal_post"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"POST")," /content/importdeal"),(0,r.kt)("td",{parentName:"tr",align:null},"Import a deal")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/estuary-documentation/clients/perl/docs/ContentApi#content_list_get"},(0,r.kt)("strong",{parentName:"a"},"content_list_get"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"GET")," /content/list"),(0,r.kt)("td",{parentName:"tr",align:null},"List all pinned content")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/estuary-documentation/clients/perl/docs/ContentApi#content_read_cont_get"},(0,r.kt)("strong",{parentName:"a"},"content_read_cont_get"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"GET")," /content/read/{cont}"),(0,r.kt)("td",{parentName:"tr",align:null},"Read content")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/estuary-documentation/clients/perl/docs/ContentApi#content_staging_zones_get"},(0,r.kt)("strong",{parentName:"a"},"content_staging_zones_get"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"GET")," /content/staging-zones"),(0,r.kt)("td",{parentName:"tr",align:null},"Get staging zone for user")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/estuary-documentation/clients/perl/docs/ContentApi#content_stats_get"},(0,r.kt)("strong",{parentName:"a"},"content_stats_get"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"GET")," /content/stats"),(0,r.kt)("td",{parentName:"tr",align:null},"Get content statistics")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/estuary-documentation/clients/perl/docs/ContentApi#content_status_id_get"},(0,r.kt)("strong",{parentName:"a"},"content_status_id_get"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"GET")," /content/status/{id}"),(0,r.kt)("td",{parentName:"tr",align:null},"Content Status")))),(0,r.kt)("h1",{id:"content_add_car_post"},(0,r.kt)("strong",{parentName:"h1"},"content_add_car_post")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"content_add_car_post(body => $body, ignore_dupes => $ignore_dupes, filename => $filename)")),(0,r.kt)("p",null,"Add Car object"),(0,r.kt)("p",null,"This endpoint is used to add a car object to the network. The object can be a file or a directory."),(0,r.kt)("h3",{id:"example"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-perl"},"use Data::Dumper;\nuse WWW::SwaggerClient::ContentApi;\nmy $api_instance = WWW::SwaggerClient::ContentApi->new(\n\n    # Configure API key authorization: bearerAuth\n    api_key => {'Authorization' => 'YOUR_API_KEY'},\n    # uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n    #api_key_prefix => {'Authorization' => 'Bearer'},\n);\n\nmy $body = WWW::SwaggerClient::Object::string->new(); # string | Car\nmy $ignore_dupes = 'ignore_dupes_example'; # string | Ignore Dupes\nmy $filename = 'filename_example'; # string | Filename\n\neval { \n    $api_instance->content_add_car_post(body => $body, ignore_dupes => $ignore_dupes, filename => $filename);\n};\nif ($@) {\n    warn \"Exception when calling ContentApi->content_add_car_post: $@\\n\";\n}\n")),(0,r.kt)("h3",{id:"parameters"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"body")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Car"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"ignore_dupes")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Ignore Dupes"),(0,r.kt)("td",{parentName:"tr",align:null},"[optional]")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"filename")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Filename"),(0,r.kt)("td",{parentName:"tr",align:null},"[optional]")))),(0,r.kt)("h3",{id:"return-type"},"Return type"),(0,r.kt)("p",null,"void (empty response body)"),(0,r.kt)("h3",{id:"authorization"},"Authorization"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/#bearerAuth"},"bearerAuth")),(0,r.kt)("h3",{id:"http-request-headers"},"HTTP request headers"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Content-Type"),": Not defined"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Accept"),": application/json")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"#"},"[Back to top]")," ",(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/#documentation-for-api-endpoints"},"[Back to API list]")," ",(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/#documentation-for-models"},"[Back to Model list]")," ",(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/"},"[Back to README]")),(0,r.kt)("h1",{id:"content_add_ipfs_post"},(0,r.kt)("strong",{parentName:"h1"},"content_add_ipfs_post")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"content_add_ipfs_post(body => $body, ignore_dupes => $ignore_dupes)")),(0,r.kt)("p",null,"Add IPFS object"),(0,r.kt)("p",null,"This endpoint is used to add an IPFS object to the network. The object can be a file or a directory."),(0,r.kt)("h3",{id:"example-1"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-perl"},"use Data::Dumper;\nuse WWW::SwaggerClient::ContentApi;\nmy $api_instance = WWW::SwaggerClient::ContentApi->new(\n\n    # Configure API key authorization: bearerAuth\n    api_key => {'Authorization' => 'YOUR_API_KEY'},\n    # uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n    #api_key_prefix => {'Authorization' => 'Bearer'},\n);\n\nmy $body = WWW::SwaggerClient::Object::UtilContentAddIpfsBody->new(); # UtilContentAddIpfsBody | IPFS Body\nmy $ignore_dupes = 'ignore_dupes_example'; # string | Ignore Dupes\n\neval { \n    $api_instance->content_add_ipfs_post(body => $body, ignore_dupes => $ignore_dupes);\n};\nif ($@) {\n    warn \"Exception when calling ContentApi->content_add_ipfs_post: $@\\n\";\n}\n")),(0,r.kt)("h3",{id:"parameters-1"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"body")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/estuary-documentation/clients/perl/docs/UtilContentAddIpfsBody"},(0,r.kt)("strong",{parentName:"a"},"UtilContentAddIpfsBody"))),(0,r.kt)("td",{parentName:"tr",align:null},"IPFS Body"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"ignore_dupes")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Ignore Dupes"),(0,r.kt)("td",{parentName:"tr",align:null},"[optional]")))),(0,r.kt)("h3",{id:"return-type-1"},"Return type"),(0,r.kt)("p",null,"void (empty response body)"),(0,r.kt)("h3",{id:"authorization-1"},"Authorization"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/#bearerAuth"},"bearerAuth")),(0,r.kt)("h3",{id:"http-request-headers-1"},"HTTP request headers"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Content-Type"),": Not defined"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Accept"),": application/json")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"#"},"[Back to top]")," ",(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/#documentation-for-api-endpoints"},"[Back to API list]")," ",(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/#documentation-for-models"},"[Back to Model list]")," ",(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/"},"[Back to README]")),(0,r.kt)("h1",{id:"content_add_post"},(0,r.kt)("strong",{parentName:"h1"},"content_add_post")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"UtilContentAddResponse content_add_post(data => $data, filename => $filename, coluuid => $coluuid, replication => $replication, ignore_dupes => $ignore_dupes, lazy_provide => $lazy_provide, dir => $dir)")),(0,r.kt)("p",null,"Add new content"),(0,r.kt)("p",null,"This endpoint is used to upload new content."),(0,r.kt)("h3",{id:"example-2"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-perl"},"use Data::Dumper;\nuse WWW::SwaggerClient::ContentApi;\nmy $api_instance = WWW::SwaggerClient::ContentApi->new(\n\n    # Configure API key authorization: bearerAuth\n    api_key => {'Authorization' => 'YOUR_API_KEY'},\n    # uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n    #api_key_prefix => {'Authorization' => 'Bearer'},\n);\n\nmy $data = '/path/to/file.txt'; # File | File to upload\nmy $filename = 'filename_example'; # string | Filenam to use for upload\nmy $coluuid = 'coluuid_example'; # string | Collection UUID\nmy $replication = 56; # int | Replication value\nmy $ignore_dupes = 'ignore_dupes_example'; # string | Ignore Dupes true/false\nmy $lazy_provide = 'lazy_provide_example'; # string | Lazy Provide true/false\nmy $dir = 'dir_example'; # string | Directory\n\neval { \n    my $result = $api_instance->content_add_post(data => $data, filename => $filename, coluuid => $coluuid, replication => $replication, ignore_dupes => $ignore_dupes, lazy_provide => $lazy_provide, dir => $dir);\n    print Dumper($result);\n};\nif ($@) {\n    warn \"Exception when calling ContentApi->content_add_post: $@\\n\";\n}\n")),(0,r.kt)("h3",{id:"parameters-2"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"data")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"File")),(0,r.kt)("td",{parentName:"tr",align:null},"File to upload"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"filename")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Filenam to use for upload"),(0,r.kt)("td",{parentName:"tr",align:null},"[optional]")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"coluuid")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Collection UUID"),(0,r.kt)("td",{parentName:"tr",align:null},"[optional]")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"replication")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"int")),(0,r.kt)("td",{parentName:"tr",align:null},"Replication value"),(0,r.kt)("td",{parentName:"tr",align:null},"[optional]")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"ignore_dupes")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Ignore Dupes true/false"),(0,r.kt)("td",{parentName:"tr",align:null},"[optional]")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"lazy_provide")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Lazy Provide true/false"),(0,r.kt)("td",{parentName:"tr",align:null},"[optional]")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"dir")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Directory"),(0,r.kt)("td",{parentName:"tr",align:null},"[optional]")))),(0,r.kt)("h3",{id:"return-type-2"},"Return type"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/docs/UtilContentAddResponse"},(0,r.kt)("strong",{parentName:"a"},"UtilContentAddResponse"))),(0,r.kt)("h3",{id:"authorization-2"},"Authorization"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/#bearerAuth"},"bearerAuth")),(0,r.kt)("h3",{id:"http-request-headers-2"},"HTTP request headers"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Content-Type"),": multipart/form-data"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Accept"),": application/json")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"#"},"[Back to top]")," ",(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/#documentation-for-api-endpoints"},"[Back to API list]")," ",(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/#documentation-for-models"},"[Back to Model list]")," ",(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/"},"[Back to README]")),(0,r.kt)("h1",{id:"content_aggregated_content_get"},(0,r.kt)("strong",{parentName:"h1"},"content_aggregated_content_get")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"string content_aggregated_content_get(content => $content)")),(0,r.kt)("p",null,"Get aggregated content stats"),(0,r.kt)("p",null,"This endpoint returns aggregated content stats"),(0,r.kt)("h3",{id:"example-3"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-perl"},"use Data::Dumper;\nuse WWW::SwaggerClient::ContentApi;\nmy $api_instance = WWW::SwaggerClient::ContentApi->new(\n\n    # Configure API key authorization: bearerAuth\n    api_key => {'Authorization' => 'YOUR_API_KEY'},\n    # uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n    #api_key_prefix => {'Authorization' => 'Bearer'},\n);\n\nmy $content = 'content_example'; # string | Content ID\n\neval { \n    my $result = $api_instance->content_aggregated_content_get(content => $content);\n    print Dumper($result);\n};\nif ($@) {\n    warn \"Exception when calling ContentApi->content_aggregated_content_get: $@\\n\";\n}\n")),(0,r.kt)("h3",{id:"parameters-3"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"content")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Content ID"),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("h3",{id:"return-type-3"},"Return type"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"string")),(0,r.kt)("h3",{id:"authorization-3"},"Authorization"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/#bearerAuth"},"bearerAuth")),(0,r.kt)("h3",{id:"http-request-headers-3"},"HTTP request headers"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Content-Type"),": Not defined"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Accept"),": application/json")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"#"},"[Back to top]")," ",(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/#documentation-for-api-endpoints"},"[Back to API list]")," ",(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/#documentation-for-models"},"[Back to Model list]")," ",(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/"},"[Back to README]")),(0,r.kt)("h1",{id:"content_all_deals_get"},(0,r.kt)("strong",{parentName:"h1"},"content_all_deals_get")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"content_all_deals_get(begin => $begin, duration => $duration, all => $all)")),(0,r.kt)("p",null,"Get all deals for a user"),(0,r.kt)("p",null,"This endpoint is used to get all deals for a user"),(0,r.kt)("h3",{id:"example-4"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-perl"},"use Data::Dumper;\nuse WWW::SwaggerClient::ContentApi;\nmy $api_instance = WWW::SwaggerClient::ContentApi->new(\n\n    # Configure API key authorization: bearerAuth\n    api_key => {'Authorization' => 'YOUR_API_KEY'},\n    # uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n    #api_key_prefix => {'Authorization' => 'Bearer'},\n);\n\nmy $begin = 'begin_example'; # string | Begin\nmy $duration = 'duration_example'; # string | Duration\nmy $all = 'all_example'; # string | All\n\neval { \n    $api_instance->content_all_deals_get(begin => $begin, duration => $duration, all => $all);\n};\nif ($@) {\n    warn \"Exception when calling ContentApi->content_all_deals_get: $@\\n\";\n}\n")),(0,r.kt)("h3",{id:"parameters-4"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"begin")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Begin"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"duration")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Duration"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"all")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"All"),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("h3",{id:"return-type-4"},"Return type"),(0,r.kt)("p",null,"void (empty response body)"),(0,r.kt)("h3",{id:"authorization-4"},"Authorization"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/#bearerAuth"},"bearerAuth")),(0,r.kt)("h3",{id:"http-request-headers-4"},"HTTP request headers"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Content-Type"),": Not defined"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Accept"),": application/json")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"#"},"[Back to top]")," ",(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/#documentation-for-api-endpoints"},"[Back to API list]")," ",(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/#documentation-for-models"},"[Back to Model list]")," ",(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/"},"[Back to README]")),(0,r.kt)("h1",{id:"content_bw_usage_content_get"},(0,r.kt)("strong",{parentName:"h1"},"content_bw_usage_content_get")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"content_bw_usage_content_get(content => $content)")),(0,r.kt)("p",null,"Get content bandwidth"),(0,r.kt)("p",null,"This endpoint returns content bandwidth"),(0,r.kt)("h3",{id:"example-5"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-perl"},"use Data::Dumper;\nuse WWW::SwaggerClient::ContentApi;\nmy $api_instance = WWW::SwaggerClient::ContentApi->new(\n\n    # Configure API key authorization: bearerAuth\n    api_key => {'Authorization' => 'YOUR_API_KEY'},\n    # uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n    #api_key_prefix => {'Authorization' => 'Bearer'},\n);\n\nmy $content = 'content_example'; # string | Content ID\n\neval { \n    $api_instance->content_bw_usage_content_get(content => $content);\n};\nif ($@) {\n    warn \"Exception when calling ContentApi->content_bw_usage_content_get: $@\\n\";\n}\n")),(0,r.kt)("h3",{id:"parameters-5"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"content")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Content ID"),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("h3",{id:"return-type-5"},"Return type"),(0,r.kt)("p",null,"void (empty response body)"),(0,r.kt)("h3",{id:"authorization-5"},"Authorization"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/#bearerAuth"},"bearerAuth")),(0,r.kt)("h3",{id:"http-request-headers-5"},"HTTP request headers"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Content-Type"),": Not defined"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Accept"),": application/json")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"#"},"[Back to top]")," ",(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/#documentation-for-api-endpoints"},"[Back to API list]")," ",(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/#documentation-for-models"},"[Back to Model list]")," ",(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/"},"[Back to README]")),(0,r.kt)("h1",{id:"content_create_post"},(0,r.kt)("strong",{parentName:"h1"},"content_create_post")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"content_create_post(req => $req, ignore_dupes => $ignore_dupes)")),(0,r.kt)("p",null,"Add a new content"),(0,r.kt)("p",null,"This endpoint adds a new content"),(0,r.kt)("h3",{id:"example-6"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-perl"},"use Data::Dumper;\nuse WWW::SwaggerClient::ContentApi;\nmy $api_instance = WWW::SwaggerClient::ContentApi->new(\n\n    # Configure API key authorization: bearerAuth\n    api_key => {'Authorization' => 'YOUR_API_KEY'},\n    # uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n    #api_key_prefix => {'Authorization' => 'Bearer'},\n);\n\nmy $req = WWW::SwaggerClient::Object::UtilContentCreateBody->new(); # UtilContentCreateBody | Content\nmy $ignore_dupes = 'ignore_dupes_example'; # string | Ignore Dupes\n\neval { \n    $api_instance->content_create_post(req => $req, ignore_dupes => $ignore_dupes);\n};\nif ($@) {\n    warn \"Exception when calling ContentApi->content_create_post: $@\\n\";\n}\n")),(0,r.kt)("h3",{id:"parameters-6"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"req")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/estuary-documentation/clients/perl/docs/UtilContentCreateBody"},(0,r.kt)("strong",{parentName:"a"},"UtilContentCreateBody"))),(0,r.kt)("td",{parentName:"tr",align:null},"Content"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"ignore_dupes")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Ignore Dupes"),(0,r.kt)("td",{parentName:"tr",align:null},"[optional]")))),(0,r.kt)("h3",{id:"return-type-6"},"Return type"),(0,r.kt)("p",null,"void (empty response body)"),(0,r.kt)("h3",{id:"authorization-6"},"Authorization"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/#bearerAuth"},"bearerAuth")),(0,r.kt)("h3",{id:"http-request-headers-6"},"HTTP request headers"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Content-Type"),": Not defined"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Accept"),": application/json")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"#"},"[Back to top]")," ",(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/#documentation-for-api-endpoints"},"[Back to API list]")," ",(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/#documentation-for-models"},"[Back to Model list]")," ",(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/"},"[Back to README]")),(0,r.kt)("h1",{id:"content_deals_get"},(0,r.kt)("strong",{parentName:"h1"},"content_deals_get")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"content_deals_get(limit => $limit, offset => $offset)")),(0,r.kt)("p",null,"Content with deals"),(0,r.kt)("p",null,"This endpoint lists all content with deals"),(0,r.kt)("h3",{id:"example-7"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-perl"},"use Data::Dumper;\nuse WWW::SwaggerClient::ContentApi;\nmy $api_instance = WWW::SwaggerClient::ContentApi->new(\n\n    # Configure API key authorization: bearerAuth\n    api_key => {'Authorization' => 'YOUR_API_KEY'},\n    # uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n    #api_key_prefix => {'Authorization' => 'Bearer'},\n);\n\nmy $limit = 56; # int | Limit\nmy $offset = 56; # int | Offset\n\neval { \n    $api_instance->content_deals_get(limit => $limit, offset => $offset);\n};\nif ($@) {\n    warn \"Exception when calling ContentApi->content_deals_get: $@\\n\";\n}\n")),(0,r.kt)("h3",{id:"parameters-7"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"limit")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"int")),(0,r.kt)("td",{parentName:"tr",align:null},"Limit"),(0,r.kt)("td",{parentName:"tr",align:null},"[optional]")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"offset")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"int")),(0,r.kt)("td",{parentName:"tr",align:null},"Offset"),(0,r.kt)("td",{parentName:"tr",align:null},"[optional]")))),(0,r.kt)("h3",{id:"return-type-7"},"Return type"),(0,r.kt)("p",null,"void (empty response body)"),(0,r.kt)("h3",{id:"authorization-7"},"Authorization"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/#bearerAuth"},"bearerAuth")),(0,r.kt)("h3",{id:"http-request-headers-7"},"HTTP request headers"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Content-Type"),": Not defined"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Accept"),": application/json")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"#"},"[Back to top]")," ",(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/#documentation-for-api-endpoints"},"[Back to API list]")," ",(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/#documentation-for-models"},"[Back to Model list]")," ",(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/"},"[Back to README]")),(0,r.kt)("h1",{id:"content_ensure_replication_datacid_get"},(0,r.kt)("strong",{parentName:"h1"},"content_ensure_replication_datacid_get")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"content_ensure_replication_datacid_get(datacid => $datacid)")),(0,r.kt)("p",null,"Ensure Replication"),(0,r.kt)("p",null,"This endpoint ensures that the content is replicated to the specified number of providers"),(0,r.kt)("h3",{id:"example-8"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-perl"},"use Data::Dumper;\nuse WWW::SwaggerClient::ContentApi;\nmy $api_instance = WWW::SwaggerClient::ContentApi->new(\n\n    # Configure API key authorization: bearerAuth\n    api_key => {'Authorization' => 'YOUR_API_KEY'},\n    # uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n    #api_key_prefix => {'Authorization' => 'Bearer'},\n);\n\nmy $datacid = 'datacid_example'; # string | Data CID\n\neval { \n    $api_instance->content_ensure_replication_datacid_get(datacid => $datacid);\n};\nif ($@) {\n    warn \"Exception when calling ContentApi->content_ensure_replication_datacid_get: $@\\n\";\n}\n")),(0,r.kt)("h3",{id:"parameters-8"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"datacid")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Data CID"),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("h3",{id:"return-type-8"},"Return type"),(0,r.kt)("p",null,"void (empty response body)"),(0,r.kt)("h3",{id:"authorization-8"},"Authorization"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/#bearerAuth"},"bearerAuth")),(0,r.kt)("h3",{id:"http-request-headers-8"},"HTTP request headers"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Content-Type"),": Not defined"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Accept"),": application/json")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"#"},"[Back to top]")," ",(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/#documentation-for-api-endpoints"},"[Back to API list]")," ",(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/#documentation-for-models"},"[Back to Model list]")," ",(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/"},"[Back to README]")),(0,r.kt)("h1",{id:"content_failures_content_get"},(0,r.kt)("strong",{parentName:"h1"},"content_failures_content_get")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"string content_failures_content_get(content => $content)")),(0,r.kt)("p",null,"List all failures for a content"),(0,r.kt)("p",null,"This endpoint returns all failures for a content"),(0,r.kt)("h3",{id:"example-9"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-perl"},"use Data::Dumper;\nuse WWW::SwaggerClient::ContentApi;\nmy $api_instance = WWW::SwaggerClient::ContentApi->new(\n\n    # Configure API key authorization: bearerAuth\n    api_key => {'Authorization' => 'YOUR_API_KEY'},\n    # uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n    #api_key_prefix => {'Authorization' => 'Bearer'},\n);\n\nmy $content = 'content_example'; # string | Content ID\n\neval { \n    my $result = $api_instance->content_failures_content_get(content => $content);\n    print Dumper($result);\n};\nif ($@) {\n    warn \"Exception when calling ContentApi->content_failures_content_get: $@\\n\";\n}\n")),(0,r.kt)("h3",{id:"parameters-9"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"content")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Content ID"),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("h3",{id:"return-type-9"},"Return type"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"string")),(0,r.kt)("h3",{id:"authorization-9"},"Authorization"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/#bearerAuth"},"bearerAuth")),(0,r.kt)("h3",{id:"http-request-headers-9"},"HTTP request headers"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Content-Type"),": Not defined"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Accept"),": application/json")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"#"},"[Back to top]")," ",(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/#documentation-for-api-endpoints"},"[Back to API list]")," ",(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/#documentation-for-models"},"[Back to Model list]")," ",(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/"},"[Back to README]")),(0,r.kt)("h1",{id:"content_id_get"},(0,r.kt)("strong",{parentName:"h1"},"content_id_get")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"content_id_get(id => $id)")),(0,r.kt)("p",null,"Content"),(0,r.kt)("p",null,"This endpoint returns a content by its ID"),(0,r.kt)("h3",{id:"example-10"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-perl"},"use Data::Dumper;\nuse WWW::SwaggerClient::ContentApi;\nmy $api_instance = WWW::SwaggerClient::ContentApi->new(\n\n    # Configure API key authorization: bearerAuth\n    api_key => {'Authorization' => 'YOUR_API_KEY'},\n    # uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n    #api_key_prefix => {'Authorization' => 'Bearer'},\n);\n\nmy $id = 56; # int | Content ID\n\neval { \n    $api_instance->content_id_get(id => $id);\n};\nif ($@) {\n    warn \"Exception when calling ContentApi->content_id_get: $@\\n\";\n}\n")),(0,r.kt)("h3",{id:"parameters-10"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"id")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"int")),(0,r.kt)("td",{parentName:"tr",align:null},"Content ID"),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("h3",{id:"return-type-10"},"Return type"),(0,r.kt)("p",null,"void (empty response body)"),(0,r.kt)("h3",{id:"authorization-10"},"Authorization"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/#bearerAuth"},"bearerAuth")),(0,r.kt)("h3",{id:"http-request-headers-10"},"HTTP request headers"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Content-Type"),": Not defined"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Accept"),": application/json")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"#"},"[Back to top]")," ",(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/#documentation-for-api-endpoints"},"[Back to API list]")," ",(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/#documentation-for-models"},"[Back to Model list]")," ",(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/"},"[Back to README]")),(0,r.kt)("h1",{id:"content_importdeal_post"},(0,r.kt)("strong",{parentName:"h1"},"content_importdeal_post")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"content_importdeal_post(body => $body)")),(0,r.kt)("p",null,"Import a deal"),(0,r.kt)("p",null,"This endpoint imports a deal into the shuttle."),(0,r.kt)("h3",{id:"example-11"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-perl"},"use Data::Dumper;\nuse WWW::SwaggerClient::ContentApi;\nmy $api_instance = WWW::SwaggerClient::ContentApi->new(\n\n    # Configure API key authorization: bearerAuth\n    api_key => {'Authorization' => 'YOUR_API_KEY'},\n    # uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n    #api_key_prefix => {'Authorization' => 'Bearer'},\n);\n\nmy $body = WWW::SwaggerClient::Object::MainImportDealBody->new(); # MainImportDealBody | Import a deal\n\neval { \n    $api_instance->content_importdeal_post(body => $body);\n};\nif ($@) {\n    warn \"Exception when calling ContentApi->content_importdeal_post: $@\\n\";\n}\n")),(0,r.kt)("h3",{id:"parameters-11"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"body")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/estuary-documentation/clients/perl/docs/MainImportDealBody"},(0,r.kt)("strong",{parentName:"a"},"MainImportDealBody"))),(0,r.kt)("td",{parentName:"tr",align:null},"Import a deal"),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("h3",{id:"return-type-11"},"Return type"),(0,r.kt)("p",null,"void (empty response body)"),(0,r.kt)("h3",{id:"authorization-11"},"Authorization"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/#bearerAuth"},"bearerAuth")),(0,r.kt)("h3",{id:"http-request-headers-11"},"HTTP request headers"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Content-Type"),": Not defined"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Accept"),": application/json")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"#"},"[Back to top]")," ",(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/#documentation-for-api-endpoints"},"[Back to API list]")," ",(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/#documentation-for-models"},"[Back to Model list]")," ",(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/"},"[Back to README]")),(0,r.kt)("h1",{id:"content_list_get"},(0,r.kt)("strong",{parentName:"h1"},"content_list_get")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"ARRAY","[string]"," content_list_get()")),(0,r.kt)("p",null,"List all pinned content"),(0,r.kt)("p",null,"This endpoint lists all content"),(0,r.kt)("h3",{id:"example-12"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-perl"},"use Data::Dumper;\nuse WWW::SwaggerClient::ContentApi;\nmy $api_instance = WWW::SwaggerClient::ContentApi->new(\n\n    # Configure API key authorization: bearerAuth\n    api_key => {'Authorization' => 'YOUR_API_KEY'},\n    # uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n    #api_key_prefix => {'Authorization' => 'Bearer'},\n);\n\n\neval { \n    my $result = $api_instance->content_list_get();\n    print Dumper($result);\n};\nif ($@) {\n    warn \"Exception when calling ContentApi->content_list_get: $@\\n\";\n}\n")),(0,r.kt)("h3",{id:"parameters-12"},"Parameters"),(0,r.kt)("p",null,"This endpoint does not need any parameter."),(0,r.kt)("h3",{id:"return-type-12"},"Return type"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"ARRAY","[string]")),(0,r.kt)("h3",{id:"authorization-12"},"Authorization"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/#bearerAuth"},"bearerAuth")),(0,r.kt)("h3",{id:"http-request-headers-12"},"HTTP request headers"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Content-Type"),": Not defined"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Accept"),": application/json")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"#"},"[Back to top]")," ",(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/#documentation-for-api-endpoints"},"[Back to API list]")," ",(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/#documentation-for-models"},"[Back to Model list]")," ",(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/"},"[Back to README]")),(0,r.kt)("h1",{id:"content_read_cont_get"},(0,r.kt)("strong",{parentName:"h1"},"content_read_cont_get")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"content_read_cont_get(cont => $cont)")),(0,r.kt)("p",null,"Read content"),(0,r.kt)("p",null,"This endpoint reads content from the blockstore"),(0,r.kt)("h3",{id:"example-13"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-perl"},"use Data::Dumper;\nuse WWW::SwaggerClient::ContentApi;\nmy $api_instance = WWW::SwaggerClient::ContentApi->new(\n\n    # Configure API key authorization: bearerAuth\n    api_key => {'Authorization' => 'YOUR_API_KEY'},\n    # uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n    #api_key_prefix => {'Authorization' => 'Bearer'},\n);\n\nmy $cont = 'cont_example'; # string | CID\n\neval { \n    $api_instance->content_read_cont_get(cont => $cont);\n};\nif ($@) {\n    warn \"Exception when calling ContentApi->content_read_cont_get: $@\\n\";\n}\n")),(0,r.kt)("h3",{id:"parameters-13"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"cont")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"CID"),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("h3",{id:"return-type-13"},"Return type"),(0,r.kt)("p",null,"void (empty response body)"),(0,r.kt)("h3",{id:"authorization-13"},"Authorization"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/#bearerAuth"},"bearerAuth")),(0,r.kt)("h3",{id:"http-request-headers-13"},"HTTP request headers"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Content-Type"),": Not defined"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Accept"),": application/json")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"#"},"[Back to top]")," ",(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/#documentation-for-api-endpoints"},"[Back to API list]")," ",(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/#documentation-for-models"},"[Back to Model list]")," ",(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/"},"[Back to README]")),(0,r.kt)("h1",{id:"content_staging_zones_get"},(0,r.kt)("strong",{parentName:"h1"},"content_staging_zones_get")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"content_staging_zones_get()")),(0,r.kt)("p",null,"Get staging zone for user"),(0,r.kt)("p",null,"This endpoint is used to get staging zone for user."),(0,r.kt)("h3",{id:"example-14"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-perl"},"use Data::Dumper;\nuse WWW::SwaggerClient::ContentApi;\nmy $api_instance = WWW::SwaggerClient::ContentApi->new(\n\n    # Configure API key authorization: bearerAuth\n    api_key => {'Authorization' => 'YOUR_API_KEY'},\n    # uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n    #api_key_prefix => {'Authorization' => 'Bearer'},\n);\n\n\neval { \n    $api_instance->content_staging_zones_get();\n};\nif ($@) {\n    warn \"Exception when calling ContentApi->content_staging_zones_get: $@\\n\";\n}\n")),(0,r.kt)("h3",{id:"parameters-14"},"Parameters"),(0,r.kt)("p",null,"This endpoint does not need any parameter."),(0,r.kt)("h3",{id:"return-type-14"},"Return type"),(0,r.kt)("p",null,"void (empty response body)"),(0,r.kt)("h3",{id:"authorization-14"},"Authorization"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/#bearerAuth"},"bearerAuth")),(0,r.kt)("h3",{id:"http-request-headers-14"},"HTTP request headers"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Content-Type"),": Not defined"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Accept"),": application/json")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"#"},"[Back to top]")," ",(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/#documentation-for-api-endpoints"},"[Back to API list]")," ",(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/#documentation-for-models"},"[Back to Model list]")," ",(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/"},"[Back to README]")),(0,r.kt)("h1",{id:"content_stats_get"},(0,r.kt)("strong",{parentName:"h1"},"content_stats_get")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"content_stats_get(limit => $limit, offset => $offset)")),(0,r.kt)("p",null,"Get content statistics"),(0,r.kt)("p",null,"This endpoint is used to get content statistics. Every content stored in the network (estuary) is tracked by a unique ID which can be used to get information about the content. This endpoint will allow the consumer to get the collected stats of a conten"),(0,r.kt)("h3",{id:"example-15"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-perl"},"use Data::Dumper;\nuse WWW::SwaggerClient::ContentApi;\nmy $api_instance = WWW::SwaggerClient::ContentApi->new(\n\n    # Configure API key authorization: bearerAuth\n    api_key => {'Authorization' => 'YOUR_API_KEY'},\n    # uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n    #api_key_prefix => {'Authorization' => 'Bearer'},\n);\n\nmy $limit = 'limit_example'; # string | limit\nmy $offset = 'offset_example'; # string | offset\n\neval { \n    $api_instance->content_stats_get(limit => $limit, offset => $offset);\n};\nif ($@) {\n    warn \"Exception when calling ContentApi->content_stats_get: $@\\n\";\n}\n")),(0,r.kt)("h3",{id:"parameters-15"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"limit")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"limit"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"offset")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"offset"),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("h3",{id:"return-type-15"},"Return type"),(0,r.kt)("p",null,"void (empty response body)"),(0,r.kt)("h3",{id:"authorization-15"},"Authorization"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/#bearerAuth"},"bearerAuth")),(0,r.kt)("h3",{id:"http-request-headers-15"},"HTTP request headers"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Content-Type"),": Not defined"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Accept"),": application/json")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"#"},"[Back to top]")," ",(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/#documentation-for-api-endpoints"},"[Back to API list]")," ",(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/#documentation-for-models"},"[Back to Model list]")," ",(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/"},"[Back to README]")),(0,r.kt)("h1",{id:"content_status_id_get"},(0,r.kt)("strong",{parentName:"h1"},"content_status_id_get")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"content_status_id_get(id => $id)")),(0,r.kt)("p",null,"Content Status"),(0,r.kt)("p",null,"This endpoint returns the status of a content"),(0,r.kt)("h3",{id:"example-16"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-perl"},"use Data::Dumper;\nuse WWW::SwaggerClient::ContentApi;\nmy $api_instance = WWW::SwaggerClient::ContentApi->new(\n\n    # Configure API key authorization: bearerAuth\n    api_key => {'Authorization' => 'YOUR_API_KEY'},\n    # uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n    #api_key_prefix => {'Authorization' => 'Bearer'},\n);\n\nmy $id = 56; # int | Content ID\n\neval { \n    $api_instance->content_status_id_get(id => $id);\n};\nif ($@) {\n    warn \"Exception when calling ContentApi->content_status_id_get: $@\\n\";\n}\n")),(0,r.kt)("h3",{id:"parameters-16"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"id")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"int")),(0,r.kt)("td",{parentName:"tr",align:null},"Content ID"),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("h3",{id:"return-type-16"},"Return type"),(0,r.kt)("p",null,"void (empty response body)"),(0,r.kt)("h3",{id:"authorization-16"},"Authorization"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/#bearerAuth"},"bearerAuth")),(0,r.kt)("h3",{id:"http-request-headers-16"},"HTTP request headers"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Content-Type"),": Not defined"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Accept"),": application/json")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"#"},"[Back to top]")," ",(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/#documentation-for-api-endpoints"},"[Back to API list]")," ",(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/#documentation-for-models"},"[Back to Model list]")," ",(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/"},"[Back to README]")))}s.isMDXComponent=!0}}]);