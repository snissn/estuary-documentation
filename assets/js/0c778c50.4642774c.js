"use strict";(self.webpackChunkestuary_documentation=self.webpackChunkestuary_documentation||[]).push([[3498],{3905:(t,e,n)=>{n.d(e,{Zo:()=>c,kt:()=>m});var a=n(67294);function l(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function r(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function o(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?r(Object(n),!0).forEach((function(e){l(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function i(t,e){if(null==t)return{};var n,a,l=function(t,e){if(null==t)return{};var n,a,l={},r=Object.keys(t);for(a=0;a<r.length;a++)n=r[a],e.indexOf(n)>=0||(l[n]=t[n]);return l}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(a=0;a<r.length;a++)n=r[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(l[n]=t[n])}return l}var p=a.createContext({}),u=function(t){var e=a.useContext(p),n=e;return t&&(n="function"==typeof t?t(e):o(o({},e),t)),n},c=function(t){var e=u(t.components);return a.createElement(p.Provider,{value:e},t.children)},s={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},d=a.forwardRef((function(t,e){var n=t.components,l=t.mdxType,r=t.originalType,p=t.parentName,c=i(t,["components","mdxType","originalType","parentName"]),d=u(n),m=l,k=d["".concat(p,".").concat(m)]||d[m]||s[m]||r;return n?a.createElement(k,o(o({ref:e},c),{},{components:n})):a.createElement(k,o({ref:e},c))}));function m(t,e){var n=arguments,l=e&&e.mdxType;if("string"==typeof t||l){var r=n.length,o=new Array(r);o[0]=d;var i={};for(var p in e)hasOwnProperty.call(e,p)&&(i[p]=e[p]);i.originalType=t,i.mdxType="string"==typeof t?t:l,o[1]=i;for(var u=2;u<r;u++)o[u]=n[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},27773:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>p,contentTitle:()=>o,default:()=>s,frontMatter:()=>r,metadata:()=>i,toc:()=>u});var a=n(87462),l=(n(67294),n(3905));const r={},o="WWW::SwaggerClient::CollectionsApi",i={unversionedId:"perl/docs/CollectionsApi",id:"perl/docs/CollectionsApi",title:"WWW::SwaggerClient::CollectionsApi",description:"Load the API package",source:"@site/clients/perl/docs/CollectionsApi.md",sourceDirName:"perl/docs",slug:"/perl/docs/CollectionsApi",permalink:"/estuary-documentation/clients/perl/docs/CollectionsApi",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"WWW::SwaggerClient::AutoretrieveApi",permalink:"/estuary-documentation/clients/perl/docs/AutoretrieveApi"},next:{title:"WWW::SwaggerClient::Object::CollectionsCollection",permalink:"/estuary-documentation/clients/perl/docs/CollectionsCollection"}},p={},u=[{value:"Load the API package",id:"load-the-api-package",level:2},{value:"Example",id:"example",level:3},{value:"Parameters",id:"parameters",level:3},{value:"Return type",id:"return-type",level:3},{value:"Authorization",id:"authorization",level:3},{value:"HTTP request headers",id:"http-request-headers",level:3},{value:"Example",id:"example-1",level:3},{value:"Parameters",id:"parameters-1",level:3},{value:"Return type",id:"return-type-1",level:3},{value:"Authorization",id:"authorization-1",level:3},{value:"HTTP request headers",id:"http-request-headers-1",level:3},{value:"Example",id:"example-2",level:3},{value:"Parameters",id:"parameters-2",level:3},{value:"Return type",id:"return-type-2",level:3},{value:"Authorization",id:"authorization-2",level:3},{value:"HTTP request headers",id:"http-request-headers-2",level:3},{value:"Example",id:"example-3",level:3},{value:"Parameters",id:"parameters-3",level:3},{value:"Return type",id:"return-type-3",level:3},{value:"Authorization",id:"authorization-3",level:3},{value:"HTTP request headers",id:"http-request-headers-3",level:3},{value:"Example",id:"example-4",level:3},{value:"Parameters",id:"parameters-4",level:3},{value:"Return type",id:"return-type-4",level:3},{value:"Authorization",id:"authorization-4",level:3},{value:"HTTP request headers",id:"http-request-headers-4",level:3},{value:"Example",id:"example-5",level:3},{value:"Parameters",id:"parameters-5",level:3},{value:"Return type",id:"return-type-5",level:3},{value:"Authorization",id:"authorization-5",level:3},{value:"HTTP request headers",id:"http-request-headers-5",level:3},{value:"Example",id:"example-6",level:3},{value:"Parameters",id:"parameters-6",level:3},{value:"Return type",id:"return-type-6",level:3},{value:"Authorization",id:"authorization-6",level:3},{value:"HTTP request headers",id:"http-request-headers-6",level:3},{value:"Example",id:"example-7",level:3},{value:"Parameters",id:"parameters-7",level:3},{value:"Return type",id:"return-type-7",level:3},{value:"Authorization",id:"authorization-7",level:3},{value:"HTTP request headers",id:"http-request-headers-7",level:3}],c={toc:u};function s(t){let{components:e,...n}=t;return(0,l.kt)("wrapper",(0,a.Z)({},c,n,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"wwwswaggerclientcollectionsapi"},"WWW::SwaggerClient::CollectionsApi"),(0,l.kt)("h2",{id:"load-the-api-package"},"Load the API package"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-perl"},"use WWW::SwaggerClient::Object::CollectionsApi;\n")),(0,l.kt)("p",null,"All URIs are relative to ",(0,l.kt)("em",{parentName:"p"},(0,l.kt)("a",{parentName:"em",href:"https://api.estuary.tech"},"https://api.estuary.tech"))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Method"),(0,l.kt)("th",{parentName:"tr",align:null},"HTTP request"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/estuary-documentation/clients/perl/docs/CollectionsApi#collections_coluuid_commit_post"},(0,l.kt)("strong",{parentName:"a"},"collections_coluuid_commit_post"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"POST")," /collections/{coluuid}/commit"),(0,l.kt)("td",{parentName:"tr",align:null},"Produce a CID of the collection contents")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/estuary-documentation/clients/perl/docs/CollectionsApi#collections_coluuid_contents_delete"},(0,l.kt)("strong",{parentName:"a"},"collections_coluuid_contents_delete"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"DELETE")," /collections/{coluuid}/contents"),(0,l.kt)("td",{parentName:"tr",align:null},"Deletes a content from a collection")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/estuary-documentation/clients/perl/docs/CollectionsApi#collections_coluuid_delete"},(0,l.kt)("strong",{parentName:"a"},"collections_coluuid_delete"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"DELETE")," /collections/{coluuid}"),(0,l.kt)("td",{parentName:"tr",align:null},"Deletes a collection")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/estuary-documentation/clients/perl/docs/CollectionsApi#collections_coluuid_get"},(0,l.kt)("strong",{parentName:"a"},"collections_coluuid_get"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"GET")," /collections/{coluuid}"),(0,l.kt)("td",{parentName:"tr",align:null},"Get contents in a collection")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/estuary-documentation/clients/perl/docs/CollectionsApi#collections_coluuid_post"},(0,l.kt)("strong",{parentName:"a"},"collections_coluuid_post"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"POST")," /collections/{coluuid}"),(0,l.kt)("td",{parentName:"tr",align:null},"Add contents to a collection")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/estuary-documentation/clients/perl/docs/CollectionsApi#collections_fs_add_post"},(0,l.kt)("strong",{parentName:"a"},"collections_fs_add_post"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"POST")," /collections/fs/add"),(0,l.kt)("td",{parentName:"tr",align:null},"Add a file to a collection")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/estuary-documentation/clients/perl/docs/CollectionsApi#collections_get"},(0,l.kt)("strong",{parentName:"a"},"collections_get"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"GET")," /collections/"),(0,l.kt)("td",{parentName:"tr",align:null},"List all collections")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/estuary-documentation/clients/perl/docs/CollectionsApi#collections_post"},(0,l.kt)("strong",{parentName:"a"},"collections_post"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"POST")," /collections/"),(0,l.kt)("td",{parentName:"tr",align:null},"Create a new collection")))),(0,l.kt)("h1",{id:"collections_coluuid_commit_post"},(0,l.kt)("strong",{parentName:"h1"},"collections_coluuid_commit_post")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"string collections_coluuid_commit_post(coluuid => $coluuid)")),(0,l.kt)("p",null,"Produce a CID of the collection contents"),(0,l.kt)("p",null,"This endpoint is used to save the contents in a collection, producing a top-level CID that references all the current CIDs in the collection."),(0,l.kt)("h3",{id:"example"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-perl"},"use Data::Dumper;\nuse WWW::SwaggerClient::CollectionsApi;\nmy $api_instance = WWW::SwaggerClient::CollectionsApi->new(\n\n    # Configure API key authorization: bearerAuth\n    api_key => {'Authorization' => 'YOUR_API_KEY'},\n    # uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n    #api_key_prefix => {'Authorization' => 'Bearer'},\n);\n\nmy $coluuid = 'coluuid_example'; # string | coluuid\n\neval { \n    my $result = $api_instance->collections_coluuid_commit_post(coluuid => $coluuid);\n    print Dumper($result);\n};\nif ($@) {\n    warn \"Exception when calling CollectionsApi->collections_coluuid_commit_post: $@\\n\";\n}\n")),(0,l.kt)("h3",{id:"parameters"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"coluuid")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"coluuid"),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("h3",{id:"return-type"},"Return type"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"string")),(0,l.kt)("h3",{id:"authorization"},"Authorization"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/#bearerAuth"},"bearerAuth")),(0,l.kt)("h3",{id:"http-request-headers"},"HTTP request headers"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Content-Type"),": Not defined"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Accept"),": application/json")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"#"},"[Back to top]")," ",(0,l.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/#documentation-for-api-endpoints"},"[Back to API list]")," ",(0,l.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/#documentation-for-models"},"[Back to Model list]")," ",(0,l.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/"},"[Back to README]")),(0,l.kt)("h1",{id:"collections_coluuid_contents_delete"},(0,l.kt)("strong",{parentName:"h1"},"collections_coluuid_contents_delete")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"string collections_coluuid_contents_delete(coluuid => $coluuid, contentid => $contentid, body => $body)")),(0,l.kt)("p",null,"Deletes a content from a collection"),(0,l.kt)("p",null,"This endpoint is used to delete an existing content from an existing collection. If two or more files with the same contentid exist in the collection, delete the one in the specified path"),(0,l.kt)("h3",{id:"example-1"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-perl"},"use Data::Dumper;\nuse WWW::SwaggerClient::CollectionsApi;\nmy $api_instance = WWW::SwaggerClient::CollectionsApi->new(\n\n    # Configure API key authorization: bearerAuth\n    api_key => {'Authorization' => 'YOUR_API_KEY'},\n    # uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n    #api_key_prefix => {'Authorization' => 'Bearer'},\n);\n\nmy $coluuid = 'coluuid_example'; # string | Collection ID\nmy $contentid = 'contentid_example'; # string | Content ID\nmy $body = WWW::SwaggerClient::Object::MainDeleteContentFromCollectionBody->new(); # MainDeleteContentFromCollectionBody | Variable to use when filtering for files (must be either 'path' or 'content_id')\n\neval { \n    my $result = $api_instance->collections_coluuid_contents_delete(coluuid => $coluuid, contentid => $contentid, body => $body);\n    print Dumper($result);\n};\nif ($@) {\n    warn \"Exception when calling CollectionsApi->collections_coluuid_contents_delete: $@\\n\";\n}\n")),(0,l.kt)("h3",{id:"parameters-1"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"coluuid")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"Collection ID"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"contentid")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"Content ID"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"body")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/estuary-documentation/clients/perl/docs/MainDeleteContentFromCollectionBody"},(0,l.kt)("strong",{parentName:"a"},"MainDeleteContentFromCollectionBody"))),(0,l.kt)("td",{parentName:"tr",align:null},"Variable to use when filtering for files (must be either ","'","path","'"," or ","'","content_id","'",")"),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("h3",{id:"return-type-1"},"Return type"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"string")),(0,l.kt)("h3",{id:"authorization-1"},"Authorization"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/#bearerAuth"},"bearerAuth")),(0,l.kt)("h3",{id:"http-request-headers-1"},"HTTP request headers"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Content-Type"),": Not defined"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Accept"),": application/json")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"#"},"[Back to top]")," ",(0,l.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/#documentation-for-api-endpoints"},"[Back to API list]")," ",(0,l.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/#documentation-for-models"},"[Back to Model list]")," ",(0,l.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/"},"[Back to README]")),(0,l.kt)("h1",{id:"collections_coluuid_delete"},(0,l.kt)("strong",{parentName:"h1"},"collections_coluuid_delete")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"collections_coluuid_delete(coluuid => $coluuid)")),(0,l.kt)("p",null,"Deletes a collection"),(0,l.kt)("p",null,"This endpoint is used to delete an existing collection."),(0,l.kt)("h3",{id:"example-2"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-perl"},"use Data::Dumper;\nuse WWW::SwaggerClient::CollectionsApi;\nmy $api_instance = WWW::SwaggerClient::CollectionsApi->new(\n\n    # Configure API key authorization: bearerAuth\n    api_key => {'Authorization' => 'YOUR_API_KEY'},\n    # uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n    #api_key_prefix => {'Authorization' => 'Bearer'},\n);\n\nmy $coluuid = 'coluuid_example'; # string | Collection ID\n\neval { \n    $api_instance->collections_coluuid_delete(coluuid => $coluuid);\n};\nif ($@) {\n    warn \"Exception when calling CollectionsApi->collections_coluuid_delete: $@\\n\";\n}\n")),(0,l.kt)("h3",{id:"parameters-2"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"coluuid")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"Collection ID"),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("h3",{id:"return-type-2"},"Return type"),(0,l.kt)("p",null,"void (empty response body)"),(0,l.kt)("h3",{id:"authorization-2"},"Authorization"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/#bearerAuth"},"bearerAuth")),(0,l.kt)("h3",{id:"http-request-headers-2"},"HTTP request headers"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Content-Type"),": Not defined"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Accept"),": Not defined")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"#"},"[Back to top]")," ",(0,l.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/#documentation-for-api-endpoints"},"[Back to API list]")," ",(0,l.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/#documentation-for-models"},"[Back to Model list]")," ",(0,l.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/"},"[Back to README]")),(0,l.kt)("h1",{id:"collections_coluuid_get"},(0,l.kt)("strong",{parentName:"h1"},"collections_coluuid_get")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"string collections_coluuid_get(coluuid => $coluuid, dir => $dir)")),(0,l.kt)("p",null,"Get contents in a collection"),(0,l.kt)("p",null,"This endpoint is used to get contents in a collection. If no colpath query param is passed"),(0,l.kt)("h3",{id:"example-3"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-perl"},"use Data::Dumper;\nuse WWW::SwaggerClient::CollectionsApi;\nmy $api_instance = WWW::SwaggerClient::CollectionsApi->new(\n\n    # Configure API key authorization: bearerAuth\n    api_key => {'Authorization' => 'YOUR_API_KEY'},\n    # uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n    #api_key_prefix => {'Authorization' => 'Bearer'},\n);\n\nmy $coluuid = 'coluuid_example'; # string | coluuid\nmy $dir = 'dir_example'; # string | Directory\n\neval { \n    my $result = $api_instance->collections_coluuid_get(coluuid => $coluuid, dir => $dir);\n    print Dumper($result);\n};\nif ($@) {\n    warn \"Exception when calling CollectionsApi->collections_coluuid_get: $@\\n\";\n}\n")),(0,l.kt)("h3",{id:"parameters-3"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"coluuid")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"coluuid"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"dir")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"Directory"),(0,l.kt)("td",{parentName:"tr",align:null},"[optional]")))),(0,l.kt)("h3",{id:"return-type-3"},"Return type"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"string")),(0,l.kt)("h3",{id:"authorization-3"},"Authorization"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/#bearerAuth"},"bearerAuth")),(0,l.kt)("h3",{id:"http-request-headers-3"},"HTTP request headers"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Content-Type"),": Not defined"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Accept"),": application/json")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"#"},"[Back to top]")," ",(0,l.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/#documentation-for-api-endpoints"},"[Back to API list]")," ",(0,l.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/#documentation-for-models"},"[Back to Model list]")," ",(0,l.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/"},"[Back to README]")),(0,l.kt)("h1",{id:"collections_coluuid_post"},(0,l.kt)("strong",{parentName:"h1"},"collections_coluuid_post")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"HASH","[string,string]"," collections_coluuid_post(coluuid => $coluuid, content_i_ds => $content_i_ds)")),(0,l.kt)("p",null,"Add contents to a collection"),(0,l.kt)("p",null,"This endpoint adds already-pinned contents (that have ContentIDs) to a collection."),(0,l.kt)("h3",{id:"example-4"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-perl"},"use Data::Dumper;\nuse WWW::SwaggerClient::CollectionsApi;\nmy $api_instance = WWW::SwaggerClient::CollectionsApi->new(\n\n    # Configure API key authorization: bearerAuth\n    api_key => {'Authorization' => 'YOUR_API_KEY'},\n    # uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n    #api_key_prefix => {'Authorization' => 'Bearer'},\n);\n\nmy $coluuid = 'coluuid_example'; # string | coluuid\nmy $content_i_ds = [WWW::SwaggerClient::Object::ARRAY[int]->new()]; # ARRAY[int] | Content IDs to add to collection\n\neval { \n    my $result = $api_instance->collections_coluuid_post(coluuid => $coluuid, content_i_ds => $content_i_ds);\n    print Dumper($result);\n};\nif ($@) {\n    warn \"Exception when calling CollectionsApi->collections_coluuid_post: $@\\n\";\n}\n")),(0,l.kt)("h3",{id:"parameters-4"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"coluuid")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"coluuid"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"content_i_ds")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"ARRAY","[int]")),(0,l.kt)("td",{parentName:"tr",align:null},"Content IDs to add to collection"),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("h3",{id:"return-type-4"},"Return type"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"HASH","[string,string]")),(0,l.kt)("h3",{id:"authorization-4"},"Authorization"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/#bearerAuth"},"bearerAuth")),(0,l.kt)("h3",{id:"http-request-headers-4"},"HTTP request headers"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Content-Type"),": application/json"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Accept"),": application/json")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"#"},"[Back to top]")," ",(0,l.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/#documentation-for-api-endpoints"},"[Back to API list]")," ",(0,l.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/#documentation-for-models"},"[Back to Model list]")," ",(0,l.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/"},"[Back to README]")),(0,l.kt)("h1",{id:"collections_fs_add_post"},(0,l.kt)("strong",{parentName:"h1"},"collections_fs_add_post")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"collections_fs_add_post(coluuid => $coluuid, content => $content, path => $path)")),(0,l.kt)("p",null,"Add a file to a collection"),(0,l.kt)("p",null,"This endpoint adds a file to a collection"),(0,l.kt)("h3",{id:"example-5"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-perl"},"use Data::Dumper;\nuse WWW::SwaggerClient::CollectionsApi;\nmy $api_instance = WWW::SwaggerClient::CollectionsApi->new(\n\n    # Configure API key authorization: bearerAuth\n    api_key => {'Authorization' => 'YOUR_API_KEY'},\n    # uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n    #api_key_prefix => {'Authorization' => 'Bearer'},\n);\n\nmy $coluuid = 'coluuid_example'; # string | Collection ID\nmy $content = 'content_example'; # string | Content\nmy $path = 'path_example'; # string | Path to file\n\neval { \n    $api_instance->collections_fs_add_post(coluuid => $coluuid, content => $content, path => $path);\n};\nif ($@) {\n    warn \"Exception when calling CollectionsApi->collections_fs_add_post: $@\\n\";\n}\n")),(0,l.kt)("h3",{id:"parameters-5"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"coluuid")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"Collection ID"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"content")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"Content"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"path")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"Path to file"),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("h3",{id:"return-type-5"},"Return type"),(0,l.kt)("p",null,"void (empty response body)"),(0,l.kt)("h3",{id:"authorization-5"},"Authorization"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/#bearerAuth"},"bearerAuth")),(0,l.kt)("h3",{id:"http-request-headers-5"},"HTTP request headers"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Content-Type"),": Not defined"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Accept"),": application/json")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"#"},"[Back to top]")," ",(0,l.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/#documentation-for-api-endpoints"},"[Back to API list]")," ",(0,l.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/#documentation-for-models"},"[Back to Model list]")," ",(0,l.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/"},"[Back to README]")),(0,l.kt)("h1",{id:"collections_get"},(0,l.kt)("strong",{parentName:"h1"},"collections_get")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"ARRAY","[CollectionsCollection]"," collections_get()")),(0,l.kt)("p",null,"List all collections"),(0,l.kt)("p",null,"This endpoint is used to list all collections. Whenever a user logs on estuary, it will list all collections that the user has access to. This endpoint provides a way to list all collections to the user."),(0,l.kt)("h3",{id:"example-6"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-perl"},"use Data::Dumper;\nuse WWW::SwaggerClient::CollectionsApi;\nmy $api_instance = WWW::SwaggerClient::CollectionsApi->new(\n\n    # Configure API key authorization: bearerAuth\n    api_key => {'Authorization' => 'YOUR_API_KEY'},\n    # uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n    #api_key_prefix => {'Authorization' => 'Bearer'},\n);\n\n\neval { \n    my $result = $api_instance->collections_get();\n    print Dumper($result);\n};\nif ($@) {\n    warn \"Exception when calling CollectionsApi->collections_get: $@\\n\";\n}\n")),(0,l.kt)("h3",{id:"parameters-6"},"Parameters"),(0,l.kt)("p",null,"This endpoint does not need any parameter."),(0,l.kt)("h3",{id:"return-type-6"},"Return type"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/docs/CollectionsCollection"},(0,l.kt)("strong",{parentName:"a"},"ARRAY[CollectionsCollection]"))),(0,l.kt)("h3",{id:"authorization-6"},"Authorization"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/#bearerAuth"},"bearerAuth")),(0,l.kt)("h3",{id:"http-request-headers-6"},"HTTP request headers"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Content-Type"),": Not defined"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Accept"),": application/json")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"#"},"[Back to top]")," ",(0,l.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/#documentation-for-api-endpoints"},"[Back to API list]")," ",(0,l.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/#documentation-for-models"},"[Back to Model list]")," ",(0,l.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/"},"[Back to README]")),(0,l.kt)("h1",{id:"collections_post"},(0,l.kt)("strong",{parentName:"h1"},"collections_post")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"CollectionsCollection collections_post(body => $body)")),(0,l.kt)("p",null,"Create a new collection"),(0,l.kt)("p",null,"This endpoint is used to create a new collection. A collection is a representaion of a group of objects added on the estuary. This endpoint can be used to create a new collection."),(0,l.kt)("h3",{id:"example-7"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-perl"},"use Data::Dumper;\nuse WWW::SwaggerClient::CollectionsApi;\nmy $api_instance = WWW::SwaggerClient::CollectionsApi->new(\n\n    # Configure API key authorization: bearerAuth\n    api_key => {'Authorization' => 'YOUR_API_KEY'},\n    # uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n    #api_key_prefix => {'Authorization' => 'Bearer'},\n);\n\nmy $body = WWW::SwaggerClient::Object::MainCreateCollectionBody->new(); # MainCreateCollectionBody | Collection name and description\n\neval { \n    my $result = $api_instance->collections_post(body => $body);\n    print Dumper($result);\n};\nif ($@) {\n    warn \"Exception when calling CollectionsApi->collections_post: $@\\n\";\n}\n")),(0,l.kt)("h3",{id:"parameters-7"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"body")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/estuary-documentation/clients/perl/docs/MainCreateCollectionBody"},(0,l.kt)("strong",{parentName:"a"},"MainCreateCollectionBody"))),(0,l.kt)("td",{parentName:"tr",align:null},"Collection name and description"),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("h3",{id:"return-type-7"},"Return type"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/docs/CollectionsCollection"},(0,l.kt)("strong",{parentName:"a"},"CollectionsCollection"))),(0,l.kt)("h3",{id:"authorization-7"},"Authorization"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/#bearerAuth"},"bearerAuth")),(0,l.kt)("h3",{id:"http-request-headers-7"},"HTTP request headers"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Content-Type"),": Not defined"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Accept"),": application/json")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"#"},"[Back to top]")," ",(0,l.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/#documentation-for-api-endpoints"},"[Back to API list]")," ",(0,l.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/#documentation-for-models"},"[Back to Model list]")," ",(0,l.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/perl/"},"[Back to README]")))}s.isMDXComponent=!0}}]);