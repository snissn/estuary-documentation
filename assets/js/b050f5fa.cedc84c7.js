"use strict";(self.webpackChunkestuary_documentation=self.webpackChunkestuary_documentation||[]).push([[3969],{3905:(e,t,r)=>{r.d(t,{Zo:()=>o,kt:()=>m});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function u(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},l=Object.keys(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var p=a.createContext({}),s=function(e){var t=a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},o=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,l=e.originalType,p=e.parentName,o=u(e,["components","mdxType","originalType","parentName"]),c=s(r),m=n,k=c["".concat(p,".").concat(m)]||c[m]||d[m]||l;return r?a.createElement(k,i(i({ref:t},o),{},{components:r})):a.createElement(k,i({ref:t},o))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=r.length,i=new Array(l);i[0]=c;var u={};for(var p in t)hasOwnProperty.call(t,p)&&(u[p]=t[p]);u.originalType=e,u.mdxType="string"==typeof e?e:n,i[1]=u;for(var s=2;s<l;s++)i[s]=r[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}c.displayName="MDXCreateElement"},83212:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>u,toc:()=>s});var a=r(87462),n=(r(67294),r(3905));const l={},i="EstuaryClient.NetApi",u={unversionedId:"javascript/NetApi",id:"javascript/NetApi",title:"EstuaryClient.NetApi",description:"All URIs are relative to https://api.estuary.tech",source:"@site/clients/javascript/NetApi.md",sourceDirName:"javascript",slug:"/javascript/NetApi",permalink:"/estuary-documentation/clients/javascript/NetApi",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"EstuaryClient.MinerApi",permalink:"/estuary-documentation/clients/javascript/MinerApi"},next:{title:"EstuaryClient.PeeringApi",permalink:"/estuary-documentation/clients/javascript/PeeringApi"}},p={},s=[{value:"Example",id:"example",level:3},{value:"Parameters",id:"parameters",level:3},{value:"Return type",id:"return-type",level:3},{value:"Authorization",id:"authorization",level:3},{value:"HTTP request headers",id:"http-request-headers",level:3},{value:"Example",id:"example-1",level:3},{value:"Parameters",id:"parameters-1",level:3},{value:"Return type",id:"return-type-1",level:3},{value:"Authorization",id:"authorization-1",level:3},{value:"HTTP request headers",id:"http-request-headers-1",level:3},{value:"Example",id:"example-2",level:3},{value:"Parameters",id:"parameters-2",level:3},{value:"Return type",id:"return-type-2",level:3},{value:"Authorization",id:"authorization-2",level:3},{value:"HTTP request headers",id:"http-request-headers-2",level:3},{value:"Example",id:"example-3",level:3},{value:"Parameters",id:"parameters-3",level:3},{value:"Return type",id:"return-type-3",level:3},{value:"Authorization",id:"authorization-3",level:3},{value:"HTTP request headers",id:"http-request-headers-3",level:3},{value:"Example",id:"example-4",level:3},{value:"Parameters",id:"parameters-4",level:3},{value:"Return type",id:"return-type-4",level:3},{value:"Authorization",id:"authorization-4",level:3},{value:"HTTP request headers",id:"http-request-headers-4",level:3}],o={toc:s};function d(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},o,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"estuaryclientnetapi"},"EstuaryClient.NetApi"),(0,n.kt)("p",null,"All URIs are relative to ",(0,n.kt)("em",{parentName:"p"},(0,n.kt)("a",{parentName:"em",href:"https://api.estuary.tech"},"https://api.estuary.tech"))),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Method"),(0,n.kt)("th",{parentName:"tr",align:null},"HTTP request"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/estuary-documentation/clients/javascript/NetApi#netAddrsGet"},(0,n.kt)("strong",{parentName:"a"},"netAddrsGet"))),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"GET")," /net/addrs"),(0,n.kt)("td",{parentName:"tr",align:null},"Net Addrs")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/estuary-documentation/clients/javascript/NetApi#publicMinersFailuresMinerGet"},(0,n.kt)("strong",{parentName:"a"},"publicMinersFailuresMinerGet"))),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"GET")," /public/miners/failures/{miner}"),(0,n.kt)("td",{parentName:"tr",align:null},"Get all miners")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/estuary-documentation/clients/javascript/NetApi#publicMinersGet"},(0,n.kt)("strong",{parentName:"a"},"publicMinersGet"))),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"GET")," /public/miners"),(0,n.kt)("td",{parentName:"tr",align:null},"Get all miners")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/estuary-documentation/clients/javascript/NetApi#publicNetAddrsGet"},(0,n.kt)("strong",{parentName:"a"},"publicNetAddrsGet"))),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"GET")," /public/net/addrs"),(0,n.kt)("td",{parentName:"tr",align:null},"Net Addrs")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/estuary-documentation/clients/javascript/NetApi#publicNetPeersGet"},(0,n.kt)("strong",{parentName:"a"},"publicNetPeersGet"))),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"GET")," /public/net/peers"),(0,n.kt)("td",{parentName:"tr",align:null},"Net Peers")))),(0,n.kt)("a",{name:"netAddrsGet"}),"# **netAddrsGet** > ['String'] netAddrsGet()",(0,n.kt)("p",null,"Net Addrs"),(0,n.kt)("p",null,"This endpoint is used to get net addrs"),(0,n.kt)("h3",{id:"example"},"Example"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},"var EstuaryClient = require('estuary-client');\nvar defaultClient = EstuaryClient.ApiClient.instance;\n\n// Configure API key authorization: bearerAuth\nvar bearerAuth = defaultClient.authentications['bearerAuth'];\nbearerAuth.apiKey = 'YOUR API KEY';\n// Uncomment the following line to set a prefix for the API key, e.g. \"Token\" (defaults to null)\n//bearerAuth.apiKeyPrefix = 'Token';\n\nvar apiInstance = new EstuaryClient.NetApi();\n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully. Returned data: ' + data);\n  }\n};\napiInstance.netAddrsGet(callback);\n")),(0,n.kt)("h3",{id:"parameters"},"Parameters"),(0,n.kt)("p",null,"This endpoint does not need any parameter."),(0,n.kt)("h3",{id:"return-type"},"Return type"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"['String']")),(0,n.kt)("h3",{id:"authorization"},"Authorization"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"../README.md#bearerAuth"},"bearerAuth")),(0,n.kt)("h3",{id:"http-request-headers"},"HTTP request headers"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Content-Type"),": Not defined"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Accept"),": application/json")),(0,n.kt)("a",{name:"publicMinersFailuresMinerGet"}),"# **publicMinersFailuresMinerGet** > publicMinersFailuresMinerGet(miner)",(0,n.kt)("p",null,"Get all miners"),(0,n.kt)("p",null,"This endpoint returns all miners"),(0,n.kt)("h3",{id:"example-1"},"Example"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},"var EstuaryClient = require('estuary-client');\nvar defaultClient = EstuaryClient.ApiClient.instance;\n\n// Configure API key authorization: bearerAuth\nvar bearerAuth = defaultClient.authentications['bearerAuth'];\nbearerAuth.apiKey = 'YOUR API KEY';\n// Uncomment the following line to set a prefix for the API key, e.g. \"Token\" (defaults to null)\n//bearerAuth.apiKeyPrefix = 'Token';\n\nvar apiInstance = new EstuaryClient.NetApi();\n\nvar miner = \"miner_example\"; // String | Filter by miner\n\n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully.');\n  }\n};\napiInstance.publicMinersFailuresMinerGet(miner, callback);\n")),(0,n.kt)("h3",{id:"parameters-1"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"),(0,n.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"miner")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"String")),(0,n.kt)("td",{parentName:"tr",align:null},"Filter by miner"),(0,n.kt)("td",{parentName:"tr",align:null})))),(0,n.kt)("h3",{id:"return-type-1"},"Return type"),(0,n.kt)("p",null,"null (empty response body)"),(0,n.kt)("h3",{id:"authorization-1"},"Authorization"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"../README.md#bearerAuth"},"bearerAuth")),(0,n.kt)("h3",{id:"http-request-headers-1"},"HTTP request headers"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Content-Type"),": Not defined"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Accept"),": application/json")),(0,n.kt)("a",{name:"publicMinersGet"}),"# **publicMinersGet** > publicMinersGet()",(0,n.kt)("p",null,"Get all miners"),(0,n.kt)("p",null,"This endpoint returns all miners"),(0,n.kt)("h3",{id:"example-2"},"Example"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},"var EstuaryClient = require('estuary-client');\nvar defaultClient = EstuaryClient.ApiClient.instance;\n\n// Configure API key authorization: bearerAuth\nvar bearerAuth = defaultClient.authentications['bearerAuth'];\nbearerAuth.apiKey = 'YOUR API KEY';\n// Uncomment the following line to set a prefix for the API key, e.g. \"Token\" (defaults to null)\n//bearerAuth.apiKeyPrefix = 'Token';\n\nvar apiInstance = new EstuaryClient.NetApi();\n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully.');\n  }\n};\napiInstance.publicMinersGet(callback);\n")),(0,n.kt)("h3",{id:"parameters-2"},"Parameters"),(0,n.kt)("p",null,"This endpoint does not need any parameter."),(0,n.kt)("h3",{id:"return-type-2"},"Return type"),(0,n.kt)("p",null,"null (empty response body)"),(0,n.kt)("h3",{id:"authorization-2"},"Authorization"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"../README.md#bearerAuth"},"bearerAuth")),(0,n.kt)("h3",{id:"http-request-headers-2"},"HTTP request headers"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Content-Type"),": Not defined"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Accept"),": application/json")),(0,n.kt)("a",{name:"publicNetAddrsGet"}),"# **publicNetAddrsGet** > ['String'] publicNetAddrsGet()",(0,n.kt)("p",null,"Net Addrs"),(0,n.kt)("p",null,"This endpoint is used to get net addrs"),(0,n.kt)("h3",{id:"example-3"},"Example"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},"var EstuaryClient = require('estuary-client');\nvar defaultClient = EstuaryClient.ApiClient.instance;\n\n// Configure API key authorization: bearerAuth\nvar bearerAuth = defaultClient.authentications['bearerAuth'];\nbearerAuth.apiKey = 'YOUR API KEY';\n// Uncomment the following line to set a prefix for the API key, e.g. \"Token\" (defaults to null)\n//bearerAuth.apiKeyPrefix = 'Token';\n\nvar apiInstance = new EstuaryClient.NetApi();\n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully. Returned data: ' + data);\n  }\n};\napiInstance.publicNetAddrsGet(callback);\n")),(0,n.kt)("h3",{id:"parameters-3"},"Parameters"),(0,n.kt)("p",null,"This endpoint does not need any parameter."),(0,n.kt)("h3",{id:"return-type-3"},"Return type"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"['String']")),(0,n.kt)("h3",{id:"authorization-3"},"Authorization"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"../README.md#bearerAuth"},"bearerAuth")),(0,n.kt)("h3",{id:"http-request-headers-3"},"HTTP request headers"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Content-Type"),": Not defined"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Accept"),": application/json")),(0,n.kt)("a",{name:"publicNetPeersGet"}),"# **publicNetPeersGet** > ['String'] publicNetPeersGet()",(0,n.kt)("p",null,"Net Peers"),(0,n.kt)("p",null,"This endpoint is used to get net peers"),(0,n.kt)("h3",{id:"example-4"},"Example"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},"var EstuaryClient = require('estuary-client');\nvar defaultClient = EstuaryClient.ApiClient.instance;\n\n// Configure API key authorization: bearerAuth\nvar bearerAuth = defaultClient.authentications['bearerAuth'];\nbearerAuth.apiKey = 'YOUR API KEY';\n// Uncomment the following line to set a prefix for the API key, e.g. \"Token\" (defaults to null)\n//bearerAuth.apiKeyPrefix = 'Token';\n\nvar apiInstance = new EstuaryClient.NetApi();\n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully. Returned data: ' + data);\n  }\n};\napiInstance.publicNetPeersGet(callback);\n")),(0,n.kt)("h3",{id:"parameters-4"},"Parameters"),(0,n.kt)("p",null,"This endpoint does not need any parameter."),(0,n.kt)("h3",{id:"return-type-4"},"Return type"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"['String']")),(0,n.kt)("h3",{id:"authorization-4"},"Authorization"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"../README.md#bearerAuth"},"bearerAuth")),(0,n.kt)("h3",{id:"http-request-headers-4"},"HTTP request headers"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Content-Type"),": Not defined"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Accept"),": application/json")))}d.isMDXComponent=!0}}]);