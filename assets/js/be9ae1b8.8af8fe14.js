"use strict";(self.webpackChunkestuary_documentation=self.webpackChunkestuary_documentation||[]).push([[1128],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>k});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=n.createContext({}),u=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},s=function(e){var t=u(e.components);return n.createElement(o.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),m=u(a),k=r,g=m["".concat(o,".").concat(k)]||m[k]||d[k]||l;return a?n.createElement(g,i(i({ref:t},s),{},{components:a})):n.createElement(g,i({ref:t},s))}));function k(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=m;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p.mdxType="string"==typeof e?e:r,i[1]=p;for(var u=2;u<l;u++)i[u]=a[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},968:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>p,toc:()=>u});var n=a(87462),r=(a(67294),a(3905));const l={},i="SwaggerClient::DealsApi",p={unversionedId:"ruby/docs/DealsApi",id:"ruby/docs/DealsApi",title:"SwaggerClient::DealsApi",description:"All URIs are relative to https://api.estuary.tech",source:"@site/clients/ruby/docs/DealsApi.md",sourceDirName:"ruby/docs",slug:"/ruby/docs/DealsApi",permalink:"/estuary-documentation/clients/ruby/docs/DealsApi",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"SwaggerClient::ContentApi",permalink:"/estuary-documentation/clients/ruby/docs/ContentApi"},next:{title:"SwaggerClient::DefaultApi",permalink:"/estuary-documentation/clients/ruby/docs/DefaultApi"}},o={},u=[{value:"Example",id:"example",level:3},{value:"Parameters",id:"parameters",level:3},{value:"Return type",id:"return-type",level:3},{value:"Authorization",id:"authorization",level:3},{value:"HTTP request headers",id:"http-request-headers",level:3},{value:"Example",id:"example-1",level:3},{value:"Parameters",id:"parameters-1",level:3},{value:"Return type",id:"return-type-1",level:3},{value:"Authorization",id:"authorization-1",level:3},{value:"HTTP request headers",id:"http-request-headers-1",level:3},{value:"Example",id:"example-2",level:3},{value:"Parameters",id:"parameters-2",level:3},{value:"Return type",id:"return-type-2",level:3},{value:"Authorization",id:"authorization-2",level:3},{value:"HTTP request headers",id:"http-request-headers-2",level:3},{value:"Example",id:"example-3",level:3},{value:"Parameters",id:"parameters-3",level:3},{value:"Return type",id:"return-type-3",level:3},{value:"Authorization",id:"authorization-3",level:3},{value:"HTTP request headers",id:"http-request-headers-3",level:3},{value:"Example",id:"example-4",level:3},{value:"Parameters",id:"parameters-4",level:3},{value:"Return type",id:"return-type-4",level:3},{value:"Authorization",id:"authorization-4",level:3},{value:"HTTP request headers",id:"http-request-headers-4",level:3},{value:"Example",id:"example-5",level:3},{value:"Parameters",id:"parameters-5",level:3},{value:"Return type",id:"return-type-5",level:3},{value:"Authorization",id:"authorization-5",level:3},{value:"HTTP request headers",id:"http-request-headers-5",level:3},{value:"Example",id:"example-6",level:3},{value:"Parameters",id:"parameters-6",level:3},{value:"Return type",id:"return-type-6",level:3},{value:"Authorization",id:"authorization-6",level:3},{value:"HTTP request headers",id:"http-request-headers-6",level:3},{value:"Example",id:"example-7",level:3},{value:"Parameters",id:"parameters-7",level:3},{value:"Return type",id:"return-type-7",level:3},{value:"Authorization",id:"authorization-7",level:3},{value:"HTTP request headers",id:"http-request-headers-7",level:3},{value:"Example",id:"example-8",level:3},{value:"Parameters",id:"parameters-8",level:3},{value:"Return type",id:"return-type-8",level:3},{value:"Authorization",id:"authorization-8",level:3},{value:"HTTP request headers",id:"http-request-headers-8",level:3},{value:"Example",id:"example-9",level:3},{value:"Parameters",id:"parameters-9",level:3},{value:"Return type",id:"return-type-9",level:3},{value:"Authorization",id:"authorization-9",level:3},{value:"HTTP request headers",id:"http-request-headers-9",level:3},{value:"Example",id:"example-10",level:3},{value:"Parameters",id:"parameters-10",level:3},{value:"Return type",id:"return-type-10",level:3},{value:"Authorization",id:"authorization-10",level:3},{value:"HTTP request headers",id:"http-request-headers-10",level:3},{value:"Example",id:"example-11",level:3},{value:"Parameters",id:"parameters-11",level:3},{value:"Return type",id:"return-type-11",level:3},{value:"Authorization",id:"authorization-11",level:3},{value:"HTTP request headers",id:"http-request-headers-11",level:3}],s={toc:u};function d(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"swaggerclientdealsapi"},"SwaggerClient::DealsApi"),(0,r.kt)("p",null,"All URIs are relative to ",(0,r.kt)("em",{parentName:"p"},(0,r.kt)("a",{parentName:"em",href:"https://api.estuary.tech"},"https://api.estuary.tech"))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Method"),(0,r.kt)("th",{parentName:"tr",align:null},"HTTP request"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/estuary-documentation/clients/ruby/docs/DealsApi#deal_estimate_post"},(0,r.kt)("strong",{parentName:"a"},"deal_estimate_post"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"POST")," /deal/estimate"),(0,r.kt)("td",{parentName:"tr",align:null},"Estimate the cost of a deal")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/estuary-documentation/clients/ruby/docs/DealsApi#deal_info_dealid_get"},(0,r.kt)("strong",{parentName:"a"},"deal_info_dealid_get"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"GET")," /deal/info/{dealid}"),(0,r.kt)("td",{parentName:"tr",align:null},"Get Deal Info")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/estuary-documentation/clients/ruby/docs/DealsApi#deal_proposal_propcid_get"},(0,r.kt)("strong",{parentName:"a"},"deal_proposal_propcid_get"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"GET")," /deal/proposal/{propcid}"),(0,r.kt)("td",{parentName:"tr",align:null},"Get Proposal")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/estuary-documentation/clients/ruby/docs/DealsApi#deal_query_miner_get"},(0,r.kt)("strong",{parentName:"a"},"deal_query_miner_get"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"GET")," /deal/query/{miner}"),(0,r.kt)("td",{parentName:"tr",align:null},"Query Ask")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/estuary-documentation/clients/ruby/docs/DealsApi#deal_status_by_proposal_propcid_get"},(0,r.kt)("strong",{parentName:"a"},"deal_status_by_proposal_propcid_get"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"GET")," /deal/status-by-proposal/{propcid}"),(0,r.kt)("td",{parentName:"tr",align:null},"Get Deal Status by PropCid")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/estuary-documentation/clients/ruby/docs/DealsApi#deal_status_miner_propcid_get"},(0,r.kt)("strong",{parentName:"a"},"deal_status_miner_propcid_get"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"GET")," /deal/status/{miner}/{propcid}"),(0,r.kt)("td",{parentName:"tr",align:null},"Deal Status")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/estuary-documentation/clients/ruby/docs/DealsApi#deal_transfer_in_progress_get"},(0,r.kt)("strong",{parentName:"a"},"deal_transfer_in_progress_get"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"GET")," /deal/transfer/in-progress"),(0,r.kt)("td",{parentName:"tr",align:null},"Transfer In Progress")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/estuary-documentation/clients/ruby/docs/DealsApi#deals_failures_get"},(0,r.kt)("strong",{parentName:"a"},"deals_failures_get"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"GET")," /deals/failures"),(0,r.kt)("td",{parentName:"tr",align:null},"Get storage failures for user")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/estuary-documentation/clients/ruby/docs/DealsApi#deals_make_miner_post"},(0,r.kt)("strong",{parentName:"a"},"deals_make_miner_post"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"POST")," /deals/make/{miner}"),(0,r.kt)("td",{parentName:"tr",align:null},"Make Deal")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/estuary-documentation/clients/ruby/docs/DealsApi#deals_status_deal_get"},(0,r.kt)("strong",{parentName:"a"},"deals_status_deal_get"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"GET")," /deals/status/{deal}"),(0,r.kt)("td",{parentName:"tr",align:null},"Get Deal Status")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/estuary-documentation/clients/ruby/docs/DealsApi#public_deals_failures_get"},(0,r.kt)("strong",{parentName:"a"},"public_deals_failures_get"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"GET")," /public/deals/failures"),(0,r.kt)("td",{parentName:"tr",align:null},"Get storage failures")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/estuary-documentation/clients/ruby/docs/DealsApi#public_miners_storage_query_miner_get"},(0,r.kt)("strong",{parentName:"a"},"public_miners_storage_query_miner_get"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"GET")," /public/miners/storage/query/{miner}"),(0,r.kt)("td",{parentName:"tr",align:null},"Query Ask")))),(0,r.kt)("h1",{id:"deal_estimate_post"},(0,r.kt)("strong",{parentName:"h1"},"deal_estimate_post")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"deal_estimate_post(body)")),(0,r.kt)("p",null,"Estimate the cost of a deal"),(0,r.kt)("p",null,"This endpoint estimates the cost of a deal"),(0,r.kt)("h3",{id:"example"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ruby"},"# load the gem\nrequire 'swagger_client'\n# setup authorization\nSwaggerClient.configure do |config|\n  # Configure API key authorization: bearerAuth\n  config.api_key['Authorization'] = 'YOUR API KEY'\n  # Uncomment the following line to set a prefix for the API key, e.g. 'Bearer' (defaults to nil)\n  #config.api_key_prefix['Authorization'] = 'Bearer'\nend\n\napi_instance = SwaggerClient::DealsApi.new\n\nbody = SwaggerClient::MainEstimateDealBody.new # MainEstimateDealBody | The size of the deal in bytes, the replication factor, and the duration of the deal in blocks\n\n\nbegin\n  #Estimate the cost of a deal\n  api_instance.deal_estimate_post(body)\nrescue SwaggerClient::ApiError => e\n  puts \"Exception when calling DealsApi->deal_estimate_post: #{e}\"\nend\n")),(0,r.kt)("h3",{id:"parameters"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"body")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/estuary-documentation/clients/ruby/docs/MainEstimateDealBody"},(0,r.kt)("strong",{parentName:"a"},"MainEstimateDealBody"))),(0,r.kt)("td",{parentName:"tr",align:null},"The size of the deal in bytes, the replication factor, and the duration of the deal in blocks"),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("h3",{id:"return-type"},"Return type"),(0,r.kt)("p",null,"nil (empty response body)"),(0,r.kt)("h3",{id:"authorization"},"Authorization"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/ruby/#bearerAuth"},"bearerAuth")),(0,r.kt)("h3",{id:"http-request-headers"},"HTTP request headers"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Content-Type"),": Not defined"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Accept"),": application/json")),(0,r.kt)("h1",{id:"deal_info_dealid_get"},(0,r.kt)("strong",{parentName:"h1"},"deal_info_dealid_get")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"deal_info_dealid_get(dealid)")),(0,r.kt)("p",null,"Get Deal Info"),(0,r.kt)("p",null,"This endpoint returns the deal info for a deal"),(0,r.kt)("h3",{id:"example-1"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ruby"},"# load the gem\nrequire 'swagger_client'\n# setup authorization\nSwaggerClient.configure do |config|\n  # Configure API key authorization: bearerAuth\n  config.api_key['Authorization'] = 'YOUR API KEY'\n  # Uncomment the following line to set a prefix for the API key, e.g. 'Bearer' (defaults to nil)\n  #config.api_key_prefix['Authorization'] = 'Bearer'\nend\n\napi_instance = SwaggerClient::DealsApi.new\n\ndealid = 56 # Integer | Deal ID\n\n\nbegin\n  #Get Deal Info\n  api_instance.deal_info_dealid_get(dealid)\nrescue SwaggerClient::ApiError => e\n  puts \"Exception when calling DealsApi->deal_info_dealid_get: #{e}\"\nend\n")),(0,r.kt)("h3",{id:"parameters-1"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"dealid")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Integer")),(0,r.kt)("td",{parentName:"tr",align:null},"Deal ID"),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("h3",{id:"return-type-1"},"Return type"),(0,r.kt)("p",null,"nil (empty response body)"),(0,r.kt)("h3",{id:"authorization-1"},"Authorization"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/ruby/#bearerAuth"},"bearerAuth")),(0,r.kt)("h3",{id:"http-request-headers-1"},"HTTP request headers"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Content-Type"),": Not defined"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Accept"),": application/json")),(0,r.kt)("h1",{id:"deal_proposal_propcid_get"},(0,r.kt)("strong",{parentName:"h1"},"deal_proposal_propcid_get")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"deal_proposal_propcid_get(propcid)")),(0,r.kt)("p",null,"Get Proposal"),(0,r.kt)("p",null,"This endpoint returns the proposal for a deal"),(0,r.kt)("h3",{id:"example-2"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ruby"},"# load the gem\nrequire 'swagger_client'\n# setup authorization\nSwaggerClient.configure do |config|\n  # Configure API key authorization: bearerAuth\n  config.api_key['Authorization'] = 'YOUR API KEY'\n  # Uncomment the following line to set a prefix for the API key, e.g. 'Bearer' (defaults to nil)\n  #config.api_key_prefix['Authorization'] = 'Bearer'\nend\n\napi_instance = SwaggerClient::DealsApi.new\n\npropcid = 'propcid_example' # String | Proposal CID\n\n\nbegin\n  #Get Proposal\n  api_instance.deal_proposal_propcid_get(propcid)\nrescue SwaggerClient::ApiError => e\n  puts \"Exception when calling DealsApi->deal_proposal_propcid_get: #{e}\"\nend\n")),(0,r.kt)("h3",{id:"parameters-2"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"propcid")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"Proposal CID"),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("h3",{id:"return-type-2"},"Return type"),(0,r.kt)("p",null,"nil (empty response body)"),(0,r.kt)("h3",{id:"authorization-2"},"Authorization"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/ruby/#bearerAuth"},"bearerAuth")),(0,r.kt)("h3",{id:"http-request-headers-2"},"HTTP request headers"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Content-Type"),": Not defined"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Accept"),": application/json")),(0,r.kt)("h1",{id:"deal_query_miner_get"},(0,r.kt)("strong",{parentName:"h1"},"deal_query_miner_get")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"deal_query_miner_get(miner)")),(0,r.kt)("p",null,"Query Ask"),(0,r.kt)("p",null,"This endpoint returns the ask for a given CID"),(0,r.kt)("h3",{id:"example-3"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ruby"},"# load the gem\nrequire 'swagger_client'\n# setup authorization\nSwaggerClient.configure do |config|\n  # Configure API key authorization: bearerAuth\n  config.api_key['Authorization'] = 'YOUR API KEY'\n  # Uncomment the following line to set a prefix for the API key, e.g. 'Bearer' (defaults to nil)\n  #config.api_key_prefix['Authorization'] = 'Bearer'\nend\n\napi_instance = SwaggerClient::DealsApi.new\n\nminer = 'miner_example' # String | CID\n\n\nbegin\n  #Query Ask\n  api_instance.deal_query_miner_get(miner)\nrescue SwaggerClient::ApiError => e\n  puts \"Exception when calling DealsApi->deal_query_miner_get: #{e}\"\nend\n")),(0,r.kt)("h3",{id:"parameters-3"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"miner")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"CID"),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("h3",{id:"return-type-3"},"Return type"),(0,r.kt)("p",null,"nil (empty response body)"),(0,r.kt)("h3",{id:"authorization-3"},"Authorization"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/ruby/#bearerAuth"},"bearerAuth")),(0,r.kt)("h3",{id:"http-request-headers-3"},"HTTP request headers"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Content-Type"),": Not defined"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Accept"),": application/json")),(0,r.kt)("h1",{id:"deal_status_by_proposal_propcid_get"},(0,r.kt)("strong",{parentName:"h1"},"deal_status_by_proposal_propcid_get")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"deal_status_by_proposal_propcid_get(propcid)")),(0,r.kt)("p",null,"Get Deal Status by PropCid"),(0,r.kt)("p",null,"Get Deal Status by PropCid"),(0,r.kt)("h3",{id:"example-4"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ruby"},"# load the gem\nrequire 'swagger_client'\n# setup authorization\nSwaggerClient.configure do |config|\n  # Configure API key authorization: bearerAuth\n  config.api_key['Authorization'] = 'YOUR API KEY'\n  # Uncomment the following line to set a prefix for the API key, e.g. 'Bearer' (defaults to nil)\n  #config.api_key_prefix['Authorization'] = 'Bearer'\nend\n\napi_instance = SwaggerClient::DealsApi.new\n\npropcid = 'propcid_example' # String | PropCid\n\n\nbegin\n  #Get Deal Status by PropCid\n  api_instance.deal_status_by_proposal_propcid_get(propcid)\nrescue SwaggerClient::ApiError => e\n  puts \"Exception when calling DealsApi->deal_status_by_proposal_propcid_get: #{e}\"\nend\n")),(0,r.kt)("h3",{id:"parameters-4"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"propcid")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"PropCid"),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("h3",{id:"return-type-4"},"Return type"),(0,r.kt)("p",null,"nil (empty response body)"),(0,r.kt)("h3",{id:"authorization-4"},"Authorization"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/ruby/#bearerAuth"},"bearerAuth")),(0,r.kt)("h3",{id:"http-request-headers-4"},"HTTP request headers"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Content-Type"),": Not defined"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Accept"),": application/json")),(0,r.kt)("h1",{id:"deal_status_miner_propcid_get"},(0,r.kt)("strong",{parentName:"h1"},"deal_status_miner_propcid_get")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"deal_status_miner_propcid_get(miner, propcid)")),(0,r.kt)("p",null,"Deal Status"),(0,r.kt)("p",null,"This endpoint returns the status of a deal"),(0,r.kt)("h3",{id:"example-5"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ruby"},"# load the gem\nrequire 'swagger_client'\n# setup authorization\nSwaggerClient.configure do |config|\n  # Configure API key authorization: bearerAuth\n  config.api_key['Authorization'] = 'YOUR API KEY'\n  # Uncomment the following line to set a prefix for the API key, e.g. 'Bearer' (defaults to nil)\n  #config.api_key_prefix['Authorization'] = 'Bearer'\nend\n\napi_instance = SwaggerClient::DealsApi.new\n\nminer = 'miner_example' # String | Miner\n\npropcid = 'propcid_example' # String | Proposal CID\n\n\nbegin\n  #Deal Status\n  api_instance.deal_status_miner_propcid_get(miner, propcid)\nrescue SwaggerClient::ApiError => e\n  puts \"Exception when calling DealsApi->deal_status_miner_propcid_get: #{e}\"\nend\n")),(0,r.kt)("h3",{id:"parameters-5"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"miner")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"Miner"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"propcid")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"Proposal CID"),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("h3",{id:"return-type-5"},"Return type"),(0,r.kt)("p",null,"nil (empty response body)"),(0,r.kt)("h3",{id:"authorization-5"},"Authorization"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/ruby/#bearerAuth"},"bearerAuth")),(0,r.kt)("h3",{id:"http-request-headers-5"},"HTTP request headers"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Content-Type"),": Not defined"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Accept"),": application/json")),(0,r.kt)("h1",{id:"deal_transfer_in_progress_get"},(0,r.kt)("strong",{parentName:"h1"},"deal_transfer_in_progress_get")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"deal_transfer_in_progress_get")),(0,r.kt)("p",null,"Transfer In Progress"),(0,r.kt)("p",null,"This endpoint returns the in-progress transfers"),(0,r.kt)("h3",{id:"example-6"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ruby"},"# load the gem\nrequire 'swagger_client'\n# setup authorization\nSwaggerClient.configure do |config|\n  # Configure API key authorization: bearerAuth\n  config.api_key['Authorization'] = 'YOUR API KEY'\n  # Uncomment the following line to set a prefix for the API key, e.g. 'Bearer' (defaults to nil)\n  #config.api_key_prefix['Authorization'] = 'Bearer'\nend\n\napi_instance = SwaggerClient::DealsApi.new\n\nbegin\n  #Transfer In Progress\n  api_instance.deal_transfer_in_progress_get\nrescue SwaggerClient::ApiError => e\n  puts \"Exception when calling DealsApi->deal_transfer_in_progress_get: #{e}\"\nend\n")),(0,r.kt)("h3",{id:"parameters-6"},"Parameters"),(0,r.kt)("p",null,"This endpoint does not need any parameter."),(0,r.kt)("h3",{id:"return-type-6"},"Return type"),(0,r.kt)("p",null,"nil (empty response body)"),(0,r.kt)("h3",{id:"authorization-6"},"Authorization"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/ruby/#bearerAuth"},"bearerAuth")),(0,r.kt)("h3",{id:"http-request-headers-6"},"HTTP request headers"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Content-Type"),": Not defined"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Accept"),": application/json")),(0,r.kt)("h1",{id:"deals_failures_get"},(0,r.kt)("strong",{parentName:"h1"},"deals_failures_get")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"deals_failures_get")),(0,r.kt)("p",null,"Get storage failures for user"),(0,r.kt)("p",null,"This endpoint returns a list of storage failures for user"),(0,r.kt)("h3",{id:"example-7"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ruby"},"# load the gem\nrequire 'swagger_client'\n# setup authorization\nSwaggerClient.configure do |config|\n  # Configure API key authorization: bearerAuth\n  config.api_key['Authorization'] = 'YOUR API KEY'\n  # Uncomment the following line to set a prefix for the API key, e.g. 'Bearer' (defaults to nil)\n  #config.api_key_prefix['Authorization'] = 'Bearer'\nend\n\napi_instance = SwaggerClient::DealsApi.new\n\nbegin\n  #Get storage failures for user\n  api_instance.deals_failures_get\nrescue SwaggerClient::ApiError => e\n  puts \"Exception when calling DealsApi->deals_failures_get: #{e}\"\nend\n")),(0,r.kt)("h3",{id:"parameters-7"},"Parameters"),(0,r.kt)("p",null,"This endpoint does not need any parameter."),(0,r.kt)("h3",{id:"return-type-7"},"Return type"),(0,r.kt)("p",null,"nil (empty response body)"),(0,r.kt)("h3",{id:"authorization-7"},"Authorization"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/ruby/#bearerAuth"},"bearerAuth")),(0,r.kt)("h3",{id:"http-request-headers-7"},"HTTP request headers"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Content-Type"),": Not defined"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Accept"),": application/json")),(0,r.kt)("h1",{id:"deals_make_miner_post"},(0,r.kt)("strong",{parentName:"h1"},"deals_make_miner_post")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"deals_make_miner_post(miner, deal_request)")),(0,r.kt)("p",null,"Make Deal"),(0,r.kt)("p",null,"This endpoint makes a deal for a given content and miner"),(0,r.kt)("h3",{id:"example-8"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ruby"},"# load the gem\nrequire 'swagger_client'\n# setup authorization\nSwaggerClient.configure do |config|\n  # Configure API key authorization: bearerAuth\n  config.api_key['Authorization'] = 'YOUR API KEY'\n  # Uncomment the following line to set a prefix for the API key, e.g. 'Bearer' (defaults to nil)\n  #config.api_key_prefix['Authorization'] = 'Bearer'\nend\n\napi_instance = SwaggerClient::DealsApi.new\n\nminer = 'miner_example' # String | Miner\n\ndeal_request = 'deal_request_example' # String | Deal Request\n\n\nbegin\n  #Make Deal\n  api_instance.deals_make_miner_post(miner, deal_request)\nrescue SwaggerClient::ApiError => e\n  puts \"Exception when calling DealsApi->deals_make_miner_post: #{e}\"\nend\n")),(0,r.kt)("h3",{id:"parameters-8"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"miner")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"Miner"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"deal_request")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"Deal Request"),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("h3",{id:"return-type-8"},"Return type"),(0,r.kt)("p",null,"nil (empty response body)"),(0,r.kt)("h3",{id:"authorization-8"},"Authorization"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/ruby/#bearerAuth"},"bearerAuth")),(0,r.kt)("h3",{id:"http-request-headers-8"},"HTTP request headers"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Content-Type"),": Not defined"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Accept"),": application/json")),(0,r.kt)("h1",{id:"deals_status_deal_get"},(0,r.kt)("strong",{parentName:"h1"},"deals_status_deal_get")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"deals_status_deal_get(deal)")),(0,r.kt)("p",null,"Get Deal Status"),(0,r.kt)("p",null,"This endpoint returns the status of a deal"),(0,r.kt)("h3",{id:"example-9"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ruby"},"# load the gem\nrequire 'swagger_client'\n# setup authorization\nSwaggerClient.configure do |config|\n  # Configure API key authorization: bearerAuth\n  config.api_key['Authorization'] = 'YOUR API KEY'\n  # Uncomment the following line to set a prefix for the API key, e.g. 'Bearer' (defaults to nil)\n  #config.api_key_prefix['Authorization'] = 'Bearer'\nend\n\napi_instance = SwaggerClient::DealsApi.new\n\ndeal = 56 # Integer | Deal ID\n\n\nbegin\n  #Get Deal Status\n  api_instance.deals_status_deal_get(deal)\nrescue SwaggerClient::ApiError => e\n  puts \"Exception when calling DealsApi->deals_status_deal_get: #{e}\"\nend\n")),(0,r.kt)("h3",{id:"parameters-9"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"deal")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Integer")),(0,r.kt)("td",{parentName:"tr",align:null},"Deal ID"),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("h3",{id:"return-type-9"},"Return type"),(0,r.kt)("p",null,"nil (empty response body)"),(0,r.kt)("h3",{id:"authorization-9"},"Authorization"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/ruby/#bearerAuth"},"bearerAuth")),(0,r.kt)("h3",{id:"http-request-headers-9"},"HTTP request headers"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Content-Type"),": Not defined"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Accept"),": application/json")),(0,r.kt)("h1",{id:"public_deals_failures_get"},(0,r.kt)("strong",{parentName:"h1"},"public_deals_failures_get")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"public_deals_failures_get")),(0,r.kt)("p",null,"Get storage failures"),(0,r.kt)("p",null,"This endpoint returns a list of storage failures"),(0,r.kt)("h3",{id:"example-10"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ruby"},"# load the gem\nrequire 'swagger_client'\n# setup authorization\nSwaggerClient.configure do |config|\n  # Configure API key authorization: bearerAuth\n  config.api_key['Authorization'] = 'YOUR API KEY'\n  # Uncomment the following line to set a prefix for the API key, e.g. 'Bearer' (defaults to nil)\n  #config.api_key_prefix['Authorization'] = 'Bearer'\nend\n\napi_instance = SwaggerClient::DealsApi.new\n\nbegin\n  #Get storage failures\n  api_instance.public_deals_failures_get\nrescue SwaggerClient::ApiError => e\n  puts \"Exception when calling DealsApi->public_deals_failures_get: #{e}\"\nend\n")),(0,r.kt)("h3",{id:"parameters-10"},"Parameters"),(0,r.kt)("p",null,"This endpoint does not need any parameter."),(0,r.kt)("h3",{id:"return-type-10"},"Return type"),(0,r.kt)("p",null,"nil (empty response body)"),(0,r.kt)("h3",{id:"authorization-10"},"Authorization"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/ruby/#bearerAuth"},"bearerAuth")),(0,r.kt)("h3",{id:"http-request-headers-10"},"HTTP request headers"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Content-Type"),": Not defined"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Accept"),": application/json")),(0,r.kt)("h1",{id:"public_miners_storage_query_miner_get"},(0,r.kt)("strong",{parentName:"h1"},"public_miners_storage_query_miner_get")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"public_miners_storage_query_miner_get(miner)")),(0,r.kt)("p",null,"Query Ask"),(0,r.kt)("p",null,"This endpoint returns the ask for a given CID"),(0,r.kt)("h3",{id:"example-11"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ruby"},"# load the gem\nrequire 'swagger_client'\n# setup authorization\nSwaggerClient.configure do |config|\n  # Configure API key authorization: bearerAuth\n  config.api_key['Authorization'] = 'YOUR API KEY'\n  # Uncomment the following line to set a prefix for the API key, e.g. 'Bearer' (defaults to nil)\n  #config.api_key_prefix['Authorization'] = 'Bearer'\nend\n\napi_instance = SwaggerClient::DealsApi.new\n\nminer = 'miner_example' # String | CID\n\n\nbegin\n  #Query Ask\n  api_instance.public_miners_storage_query_miner_get(miner)\nrescue SwaggerClient::ApiError => e\n  puts \"Exception when calling DealsApi->public_miners_storage_query_miner_get: #{e}\"\nend\n")),(0,r.kt)("h3",{id:"parameters-11"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"miner")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"CID"),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("h3",{id:"return-type-11"},"Return type"),(0,r.kt)("p",null,"nil (empty response body)"),(0,r.kt)("h3",{id:"authorization-11"},"Authorization"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/ruby/#bearerAuth"},"bearerAuth")),(0,r.kt)("h3",{id:"http-request-headers-11"},"HTTP request headers"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Content-Type"),": Not defined"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Accept"),": application/json")))}d.isMDXComponent=!0}}]);