"use strict";(self.webpackChunkestuary_documentation=self.webpackChunkestuary_documentation||[]).push([[6123],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>c});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),o=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=o(e.components);return r.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),m=o(n),c=a,k=m["".concat(s,".").concat(c)]||m[c]||d[c]||i;return n?r.createElement(k,l(l({ref:t},u),{},{components:n})):r.createElement(k,l({ref:t},u))}));function c(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=m;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p.mdxType="string"==typeof e?e:a,l[1]=p;for(var o=2;o<i;o++)l[o]=n[o];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},32323:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>p,toc:()=>o});var r=n(87462),a=(n(67294),n(3905));const i={},l="EstuaryClient.PeersApi",p={unversionedId:"javascript/PeersApi",id:"javascript/PeersApi",title:"EstuaryClient.PeersApi",description:"All URIs are relative to https://api.estuary.tech",source:"@site/clients/javascript/PeersApi.md",sourceDirName:"javascript",slug:"/javascript/PeersApi",permalink:"/estuary-documentation/clients/javascript/PeersApi",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"EstuaryClient.PeeringApi",permalink:"/estuary-documentation/clients/javascript/PeeringApi"},next:{title:"EstuaryClient.PinningApi",permalink:"/estuary-documentation/clients/javascript/PinningApi"}},s={},o=[{value:"Example",id:"example",level:3},{value:"Parameters",id:"parameters",level:3},{value:"Return type",id:"return-type",level:3},{value:"Authorization",id:"authorization",level:3},{value:"HTTP request headers",id:"http-request-headers",level:3},{value:"Example",id:"example-1",level:3},{value:"Parameters",id:"parameters-1",level:3},{value:"Return type",id:"return-type-1",level:3},{value:"Authorization",id:"authorization-1",level:3},{value:"HTTP request headers",id:"http-request-headers-1",level:3},{value:"Example",id:"example-2",level:3},{value:"Parameters",id:"parameters-2",level:3},{value:"Return type",id:"return-type-2",level:3},{value:"Authorization",id:"authorization-2",level:3},{value:"HTTP request headers",id:"http-request-headers-2",level:3},{value:"Example",id:"example-3",level:3},{value:"Parameters",id:"parameters-3",level:3},{value:"Return type",id:"return-type-3",level:3},{value:"Authorization",id:"authorization-3",level:3},{value:"HTTP request headers",id:"http-request-headers-3",level:3},{value:"Example",id:"example-4",level:3},{value:"Parameters",id:"parameters-4",level:3},{value:"Return type",id:"return-type-4",level:3},{value:"Authorization",id:"authorization-4",level:3},{value:"HTTP request headers",id:"http-request-headers-4",level:3},{value:"Example",id:"example-5",level:3},{value:"Parameters",id:"parameters-5",level:3},{value:"Return type",id:"return-type-5",level:3},{value:"Authorization",id:"authorization-5",level:3},{value:"HTTP request headers",id:"http-request-headers-5",level:3}],u={toc:o};function d(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"estuaryclientpeersapi"},"EstuaryClient.PeersApi"),(0,a.kt)("p",null,"All URIs are relative to ",(0,a.kt)("em",{parentName:"p"},(0,a.kt)("a",{parentName:"em",href:"https://api.estuary.tech"},"https://api.estuary.tech"))),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Method"),(0,a.kt)("th",{parentName:"tr",align:null},"HTTP request"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/estuary-documentation/clients/javascript/PeersApi#adminPeeringPeersDelete"},(0,a.kt)("strong",{parentName:"a"},"adminPeeringPeersDelete"))),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},"DELETE")," /admin/peering/peers"),(0,a.kt)("td",{parentName:"tr",align:null},"Remove peers on Peering Service")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/estuary-documentation/clients/javascript/PeersApi#adminPeeringPeersGet"},(0,a.kt)("strong",{parentName:"a"},"adminPeeringPeersGet"))),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},"GET")," /admin/peering/peers"),(0,a.kt)("td",{parentName:"tr",align:null},"List all Peering peers")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/estuary-documentation/clients/javascript/PeersApi#adminPeeringPeersPost"},(0,a.kt)("strong",{parentName:"a"},"adminPeeringPeersPost"))),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},"POST")," /admin/peering/peers"),(0,a.kt)("td",{parentName:"tr",align:null},"Add peers on Peering Service")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/estuary-documentation/clients/javascript/PeersApi#adminPeeringStartPost"},(0,a.kt)("strong",{parentName:"a"},"adminPeeringStartPost"))),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},"POST")," /admin/peering/start"),(0,a.kt)("td",{parentName:"tr",align:null},"Start Peering")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/estuary-documentation/clients/javascript/PeersApi#adminPeeringStatusGet"},(0,a.kt)("strong",{parentName:"a"},"adminPeeringStatusGet"))),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},"GET")," /admin/peering/status"),(0,a.kt)("td",{parentName:"tr",align:null},"Check Peering Status")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/estuary-documentation/clients/javascript/PeersApi#adminPeeringStopPost"},(0,a.kt)("strong",{parentName:"a"},"adminPeeringStopPost"))),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},"POST")," /admin/peering/stop"),(0,a.kt)("td",{parentName:"tr",align:null},"Stop Peering")))),(0,a.kt)("a",{name:"adminPeeringPeersDelete"}),"# **adminPeeringPeersDelete** > adminPeeringPeersDelete(body)",(0,a.kt)("p",null,"Remove peers on Peering Service"),(0,a.kt)("p",null,"This endpoint can be used to remove a Peer from the Peering Service"),(0,a.kt)("h3",{id:"example"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"var EstuaryClient = require('estuary-client');\nvar defaultClient = EstuaryClient.ApiClient.instance;\n\n// Configure API key authorization: bearerAuth\nvar bearerAuth = defaultClient.authentications['bearerAuth'];\nbearerAuth.apiKey = 'YOUR API KEY';\n// Uncomment the following line to set a prefix for the API key, e.g. \"Token\" (defaults to null)\n//bearerAuth.apiKeyPrefix = 'Token';\n\nvar apiInstance = new EstuaryClient.PeersApi();\n\nvar body = [new EstuaryClient.[String]()]; // [String] | Peer ids\n\n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully.');\n  }\n};\napiInstance.adminPeeringPeersDelete(body, callback);\n")),(0,a.kt)("h3",{id:"parameters"},"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"),(0,a.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},"body")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},"[String]")),(0,a.kt)("td",{parentName:"tr",align:null},"Peer ids"),(0,a.kt)("td",{parentName:"tr",align:null})))),(0,a.kt)("h3",{id:"return-type"},"Return type"),(0,a.kt)("p",null,"null (empty response body)"),(0,a.kt)("h3",{id:"authorization"},"Authorization"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"../README.md#bearerAuth"},"bearerAuth")),(0,a.kt)("h3",{id:"http-request-headers"},"HTTP request headers"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Content-Type"),": Not defined"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Accept"),": application/json")),(0,a.kt)("a",{name:"adminPeeringPeersGet"}),"# **adminPeeringPeersGet** > adminPeeringPeersGet()",(0,a.kt)("p",null,"List all Peering peers"),(0,a.kt)("p",null,"This endpoint can be used to list all peers on Peering Service"),(0,a.kt)("h3",{id:"example-1"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"var EstuaryClient = require('estuary-client');\nvar defaultClient = EstuaryClient.ApiClient.instance;\n\n// Configure API key authorization: bearerAuth\nvar bearerAuth = defaultClient.authentications['bearerAuth'];\nbearerAuth.apiKey = 'YOUR API KEY';\n// Uncomment the following line to set a prefix for the API key, e.g. \"Token\" (defaults to null)\n//bearerAuth.apiKeyPrefix = 'Token';\n\nvar apiInstance = new EstuaryClient.PeersApi();\n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully.');\n  }\n};\napiInstance.adminPeeringPeersGet(callback);\n")),(0,a.kt)("h3",{id:"parameters-1"},"Parameters"),(0,a.kt)("p",null,"This endpoint does not need any parameter."),(0,a.kt)("h3",{id:"return-type-1"},"Return type"),(0,a.kt)("p",null,"null (empty response body)"),(0,a.kt)("h3",{id:"authorization-1"},"Authorization"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"../README.md#bearerAuth"},"bearerAuth")),(0,a.kt)("h3",{id:"http-request-headers-1"},"HTTP request headers"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Content-Type"),": Not defined"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Accept"),": application/json")),(0,a.kt)("a",{name:"adminPeeringPeersPost"}),"# **adminPeeringPeersPost** > adminPeeringPeersPost()",(0,a.kt)("p",null,"Add peers on Peering Service"),(0,a.kt)("p",null,"This endpoint can be used to add a Peer from the Peering Service"),(0,a.kt)("h3",{id:"example-2"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"var EstuaryClient = require('estuary-client');\nvar defaultClient = EstuaryClient.ApiClient.instance;\n\n// Configure API key authorization: bearerAuth\nvar bearerAuth = defaultClient.authentications['bearerAuth'];\nbearerAuth.apiKey = 'YOUR API KEY';\n// Uncomment the following line to set a prefix for the API key, e.g. \"Token\" (defaults to null)\n//bearerAuth.apiKeyPrefix = 'Token';\n\nvar apiInstance = new EstuaryClient.PeersApi();\n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully.');\n  }\n};\napiInstance.adminPeeringPeersPost(callback);\n")),(0,a.kt)("h3",{id:"parameters-2"},"Parameters"),(0,a.kt)("p",null,"This endpoint does not need any parameter."),(0,a.kt)("h3",{id:"return-type-2"},"Return type"),(0,a.kt)("p",null,"null (empty response body)"),(0,a.kt)("h3",{id:"authorization-2"},"Authorization"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"../README.md#bearerAuth"},"bearerAuth")),(0,a.kt)("h3",{id:"http-request-headers-2"},"HTTP request headers"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Content-Type"),": Not defined"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Accept"),": application/json")),(0,a.kt)("a",{name:"adminPeeringStartPost"}),"# **adminPeeringStartPost** > adminPeeringStartPost()",(0,a.kt)("p",null,"Start Peering"),(0,a.kt)("p",null,"This endpoint can be used to start the Peering Service"),(0,a.kt)("h3",{id:"example-3"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"var EstuaryClient = require('estuary-client');\nvar defaultClient = EstuaryClient.ApiClient.instance;\n\n// Configure API key authorization: bearerAuth\nvar bearerAuth = defaultClient.authentications['bearerAuth'];\nbearerAuth.apiKey = 'YOUR API KEY';\n// Uncomment the following line to set a prefix for the API key, e.g. \"Token\" (defaults to null)\n//bearerAuth.apiKeyPrefix = 'Token';\n\nvar apiInstance = new EstuaryClient.PeersApi();\n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully.');\n  }\n};\napiInstance.adminPeeringStartPost(callback);\n")),(0,a.kt)("h3",{id:"parameters-3"},"Parameters"),(0,a.kt)("p",null,"This endpoint does not need any parameter."),(0,a.kt)("h3",{id:"return-type-3"},"Return type"),(0,a.kt)("p",null,"null (empty response body)"),(0,a.kt)("h3",{id:"authorization-3"},"Authorization"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"../README.md#bearerAuth"},"bearerAuth")),(0,a.kt)("h3",{id:"http-request-headers-3"},"HTTP request headers"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Content-Type"),": Not defined"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Accept"),": application/json")),(0,a.kt)("a",{name:"adminPeeringStatusGet"}),"# **adminPeeringStatusGet** > adminPeeringStatusGet()",(0,a.kt)("p",null,"Check Peering Status"),(0,a.kt)("p",null,"This endpoint can be used to check the Peering status"),(0,a.kt)("h3",{id:"example-4"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"var EstuaryClient = require('estuary-client');\nvar defaultClient = EstuaryClient.ApiClient.instance;\n\n// Configure API key authorization: bearerAuth\nvar bearerAuth = defaultClient.authentications['bearerAuth'];\nbearerAuth.apiKey = 'YOUR API KEY';\n// Uncomment the following line to set a prefix for the API key, e.g. \"Token\" (defaults to null)\n//bearerAuth.apiKeyPrefix = 'Token';\n\nvar apiInstance = new EstuaryClient.PeersApi();\n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully.');\n  }\n};\napiInstance.adminPeeringStatusGet(callback);\n")),(0,a.kt)("h3",{id:"parameters-4"},"Parameters"),(0,a.kt)("p",null,"This endpoint does not need any parameter."),(0,a.kt)("h3",{id:"return-type-4"},"Return type"),(0,a.kt)("p",null,"null (empty response body)"),(0,a.kt)("h3",{id:"authorization-4"},"Authorization"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"../README.md#bearerAuth"},"bearerAuth")),(0,a.kt)("h3",{id:"http-request-headers-4"},"HTTP request headers"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Content-Type"),": Not defined"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Accept"),": application/json")),(0,a.kt)("a",{name:"adminPeeringStopPost"}),"# **adminPeeringStopPost** > adminPeeringStopPost()",(0,a.kt)("p",null,"Stop Peering"),(0,a.kt)("p",null,"This endpoint can be used to stop the Peering Service"),(0,a.kt)("h3",{id:"example-5"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"var EstuaryClient = require('estuary-client');\nvar defaultClient = EstuaryClient.ApiClient.instance;\n\n// Configure API key authorization: bearerAuth\nvar bearerAuth = defaultClient.authentications['bearerAuth'];\nbearerAuth.apiKey = 'YOUR API KEY';\n// Uncomment the following line to set a prefix for the API key, e.g. \"Token\" (defaults to null)\n//bearerAuth.apiKeyPrefix = 'Token';\n\nvar apiInstance = new EstuaryClient.PeersApi();\n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully.');\n  }\n};\napiInstance.adminPeeringStopPost(callback);\n")),(0,a.kt)("h3",{id:"parameters-5"},"Parameters"),(0,a.kt)("p",null,"This endpoint does not need any parameter."),(0,a.kt)("h3",{id:"return-type-5"},"Return type"),(0,a.kt)("p",null,"null (empty response body)"),(0,a.kt)("h3",{id:"authorization-5"},"Authorization"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"../README.md#bearerAuth"},"bearerAuth")),(0,a.kt)("h3",{id:"http-request-headers-5"},"HTTP request headers"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Content-Type"),": Not defined"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Accept"),": application/json")))}d.isMDXComponent=!0}}]);