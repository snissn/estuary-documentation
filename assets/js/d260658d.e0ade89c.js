"use strict";(self.webpackChunkestuary_documentation=self.webpackChunkestuary_documentation||[]).push([[1999],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>m});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var o=a.createContext({}),u=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},s=function(e){var t=u(e.components);return a.createElement(o.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},g=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,o=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),g=u(n),m=i,k=g["".concat(o,".").concat(m)]||g[m]||d[m]||r;return n?a.createElement(k,p(p({ref:t},s),{},{components:n})):a.createElement(k,p({ref:t},s))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,p=new Array(r);p[0]=g;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l.mdxType="string"==typeof e?e:i,p[1]=l;for(var u=2;u<r;u++)p[u]=n[u];return a.createElement.apply(null,p)}return a.createElement.apply(null,n)}g.displayName="MDXCreateElement"},17243:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>p,default:()=>d,frontMatter:()=>r,metadata:()=>l,toc:()=>u});var a=n(87462),i=(n(67294),n(3905));const r={},p="SwaggerClient::PinningApi",l={unversionedId:"ruby/docs/PinningApi",id:"ruby/docs/PinningApi",title:"SwaggerClient::PinningApi",description:"All URIs are relative to https://api.estuary.tech",source:"@site/clients/ruby/docs/PinningApi.md",sourceDirName:"ruby/docs",slug:"/ruby/docs/PinningApi",permalink:"/estuary-documentation/clients/ruby/docs/PinningApi",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"SwaggerClient::PeersApi",permalink:"/estuary-documentation/clients/ruby/docs/PeersApi"},next:{title:"SwaggerClient::PublicApi",permalink:"/estuary-documentation/clients/ruby/docs/PublicApi"}},o={},u=[{value:"Example",id:"example",level:3},{value:"Parameters",id:"parameters",level:3},{value:"Return type",id:"return-type",level:3},{value:"Authorization",id:"authorization",level:3},{value:"HTTP request headers",id:"http-request-headers",level:3},{value:"Example",id:"example-1",level:3},{value:"Parameters",id:"parameters-1",level:3},{value:"Return type",id:"return-type-1",level:3},{value:"Authorization",id:"authorization-1",level:3},{value:"HTTP request headers",id:"http-request-headers-1",level:3},{value:"Example",id:"example-2",level:3},{value:"Parameters",id:"parameters-2",level:3},{value:"Return type",id:"return-type-2",level:3},{value:"Authorization",id:"authorization-2",level:3},{value:"HTTP request headers",id:"http-request-headers-2",level:3},{value:"Example",id:"example-3",level:3},{value:"Parameters",id:"parameters-3",level:3},{value:"Return type",id:"return-type-3",level:3},{value:"Authorization",id:"authorization-3",level:3},{value:"HTTP request headers",id:"http-request-headers-3",level:3},{value:"Example",id:"example-4",level:3},{value:"Parameters",id:"parameters-4",level:3},{value:"Return type",id:"return-type-4",level:3},{value:"Authorization",id:"authorization-4",level:3},{value:"HTTP request headers",id:"http-request-headers-4",level:3}],s={toc:u};function d(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"swaggerclientpinningapi"},"SwaggerClient::PinningApi"),(0,i.kt)("p",null,"All URIs are relative to ",(0,i.kt)("em",{parentName:"p"},(0,i.kt)("a",{parentName:"em",href:"https://api.estuary.tech"},"https://api.estuary.tech"))),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Method"),(0,i.kt)("th",{parentName:"tr",align:null},"HTTP request"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/estuary-documentation/clients/ruby/docs/PinningApi#pinning_pins_get"},(0,i.kt)("strong",{parentName:"a"},"pinning_pins_get"))),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"GET")," /pinning/pins"),(0,i.kt)("td",{parentName:"tr",align:null},"List all pin status objects")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/estuary-documentation/clients/ruby/docs/PinningApi#pinning_pins_pinid_delete"},(0,i.kt)("strong",{parentName:"a"},"pinning_pins_pinid_delete"))),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"DELETE")," /pinning/pins/{pinid}"),(0,i.kt)("td",{parentName:"tr",align:null},"Delete a pinned object")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/estuary-documentation/clients/ruby/docs/PinningApi#pinning_pins_pinid_get"},(0,i.kt)("strong",{parentName:"a"},"pinning_pins_pinid_get"))),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"GET")," /pinning/pins/{pinid}"),(0,i.kt)("td",{parentName:"tr",align:null},"Get a pin status object")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/estuary-documentation/clients/ruby/docs/PinningApi#pinning_pins_pinid_post"},(0,i.kt)("strong",{parentName:"a"},"pinning_pins_pinid_post"))),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"POST")," /pinning/pins/{pinid}"),(0,i.kt)("td",{parentName:"tr",align:null},"Replace a pinned object")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/estuary-documentation/clients/ruby/docs/PinningApi#pinning_pins_post"},(0,i.kt)("strong",{parentName:"a"},"pinning_pins_post"))),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"POST")," /pinning/pins"),(0,i.kt)("td",{parentName:"tr",align:null},"Add and pin object")))),(0,i.kt)("h1",{id:"pinning_pins_get"},(0,i.kt)("strong",{parentName:"h1"},"pinning_pins_get")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"pinning_pins_get")),(0,i.kt)("p",null,"List all pin status objects"),(0,i.kt)("p",null,"This endpoint lists all pin status objects"),(0,i.kt)("h3",{id:"example"},"Example"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ruby"},"# load the gem\nrequire 'swagger_client'\n# setup authorization\nSwaggerClient.configure do |config|\n  # Configure API key authorization: bearerAuth\n  config.api_key['Authorization'] = 'YOUR API KEY'\n  # Uncomment the following line to set a prefix for the API key, e.g. 'Bearer' (defaults to nil)\n  #config.api_key_prefix['Authorization'] = 'Bearer'\nend\n\napi_instance = SwaggerClient::PinningApi.new\n\nbegin\n  #List all pin status objects\n  api_instance.pinning_pins_get\nrescue SwaggerClient::ApiError => e\n  puts \"Exception when calling PinningApi->pinning_pins_get: #{e}\"\nend\n")),(0,i.kt)("h3",{id:"parameters"},"Parameters"),(0,i.kt)("p",null,"This endpoint does not need any parameter."),(0,i.kt)("h3",{id:"return-type"},"Return type"),(0,i.kt)("p",null,"nil (empty response body)"),(0,i.kt)("h3",{id:"authorization"},"Authorization"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/ruby/#bearerAuth"},"bearerAuth")),(0,i.kt)("h3",{id:"http-request-headers"},"HTTP request headers"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Content-Type"),": Not defined"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Accept"),": application/json")),(0,i.kt)("h1",{id:"pinning_pins_pinid_delete"},(0,i.kt)("strong",{parentName:"h1"},"pinning_pins_pinid_delete")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"pinning_pins_pinid_delete(pinid)")),(0,i.kt)("p",null,"Delete a pinned object"),(0,i.kt)("p",null,"This endpoint deletes a pinned object."),(0,i.kt)("h3",{id:"example-1"},"Example"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ruby"},"# load the gem\nrequire 'swagger_client'\n# setup authorization\nSwaggerClient.configure do |config|\n  # Configure API key authorization: bearerAuth\n  config.api_key['Authorization'] = 'YOUR API KEY'\n  # Uncomment the following line to set a prefix for the API key, e.g. 'Bearer' (defaults to nil)\n  #config.api_key_prefix['Authorization'] = 'Bearer'\nend\n\napi_instance = SwaggerClient::PinningApi.new\n\npinid = 'pinid_example' # String | Pin ID\n\n\nbegin\n  #Delete a pinned object\n  api_instance.pinning_pins_pinid_delete(pinid)\nrescue SwaggerClient::ApiError => e\n  puts \"Exception when calling PinningApi->pinning_pins_pinid_delete: #{e}\"\nend\n")),(0,i.kt)("h3",{id:"parameters-1"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Name"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"),(0,i.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"pinid")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"String")),(0,i.kt)("td",{parentName:"tr",align:null},"Pin ID"),(0,i.kt)("td",{parentName:"tr",align:null})))),(0,i.kt)("h3",{id:"return-type-1"},"Return type"),(0,i.kt)("p",null,"nil (empty response body)"),(0,i.kt)("h3",{id:"authorization-1"},"Authorization"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/ruby/#bearerAuth"},"bearerAuth")),(0,i.kt)("h3",{id:"http-request-headers-1"},"HTTP request headers"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Content-Type"),": Not defined"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Accept"),": application/json")),(0,i.kt)("h1",{id:"pinning_pins_pinid_get"},(0,i.kt)("strong",{parentName:"h1"},"pinning_pins_pinid_get")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"pinning_pins_pinid_get(pinid)")),(0,i.kt)("p",null,"Get a pin status object"),(0,i.kt)("p",null,"This endpoint returns a pin status object."),(0,i.kt)("h3",{id:"example-2"},"Example"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ruby"},"# load the gem\nrequire 'swagger_client'\n# setup authorization\nSwaggerClient.configure do |config|\n  # Configure API key authorization: bearerAuth\n  config.api_key['Authorization'] = 'YOUR API KEY'\n  # Uncomment the following line to set a prefix for the API key, e.g. 'Bearer' (defaults to nil)\n  #config.api_key_prefix['Authorization'] = 'Bearer'\nend\n\napi_instance = SwaggerClient::PinningApi.new\n\npinid = 'pinid_example' # String | cid\n\n\nbegin\n  #Get a pin status object\n  api_instance.pinning_pins_pinid_get(pinid)\nrescue SwaggerClient::ApiError => e\n  puts \"Exception when calling PinningApi->pinning_pins_pinid_get: #{e}\"\nend\n")),(0,i.kt)("h3",{id:"parameters-2"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Name"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"),(0,i.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"pinid")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"String")),(0,i.kt)("td",{parentName:"tr",align:null},"cid"),(0,i.kt)("td",{parentName:"tr",align:null})))),(0,i.kt)("h3",{id:"return-type-2"},"Return type"),(0,i.kt)("p",null,"nil (empty response body)"),(0,i.kt)("h3",{id:"authorization-2"},"Authorization"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/ruby/#bearerAuth"},"bearerAuth")),(0,i.kt)("h3",{id:"http-request-headers-2"},"HTTP request headers"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Content-Type"),": Not defined"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Accept"),": application/json")),(0,i.kt)("h1",{id:"pinning_pins_pinid_post"},(0,i.kt)("strong",{parentName:"h1"},"pinning_pins_pinid_post")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"pinning_pins_pinid_post(pinid)")),(0,i.kt)("p",null,"Replace a pinned object"),(0,i.kt)("p",null,"This endpoint replaces a pinned object."),(0,i.kt)("h3",{id:"example-3"},"Example"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ruby"},"# load the gem\nrequire 'swagger_client'\n# setup authorization\nSwaggerClient.configure do |config|\n  # Configure API key authorization: bearerAuth\n  config.api_key['Authorization'] = 'YOUR API KEY'\n  # Uncomment the following line to set a prefix for the API key, e.g. 'Bearer' (defaults to nil)\n  #config.api_key_prefix['Authorization'] = 'Bearer'\nend\n\napi_instance = SwaggerClient::PinningApi.new\n\npinid = 'pinid_example' # String | Pin ID\n\n\nbegin\n  #Replace a pinned object\n  api_instance.pinning_pins_pinid_post(pinid)\nrescue SwaggerClient::ApiError => e\n  puts \"Exception when calling PinningApi->pinning_pins_pinid_post: #{e}\"\nend\n")),(0,i.kt)("h3",{id:"parameters-3"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Name"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"),(0,i.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"pinid")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"String")),(0,i.kt)("td",{parentName:"tr",align:null},"Pin ID"),(0,i.kt)("td",{parentName:"tr",align:null})))),(0,i.kt)("h3",{id:"return-type-3"},"Return type"),(0,i.kt)("p",null,"nil (empty response body)"),(0,i.kt)("h3",{id:"authorization-3"},"Authorization"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/ruby/#bearerAuth"},"bearerAuth")),(0,i.kt)("h3",{id:"http-request-headers-3"},"HTTP request headers"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Content-Type"),": Not defined"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Accept"),": application/json")),(0,i.kt)("h1",{id:"pinning_pins_post"},(0,i.kt)("strong",{parentName:"h1"},"pinning_pins_post")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"pinning_pins_post(cid, name)")),(0,i.kt)("p",null,"Add and pin object"),(0,i.kt)("p",null,"This endpoint adds a pin to the IPFS daemon."),(0,i.kt)("h3",{id:"example-4"},"Example"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ruby"},"# load the gem\nrequire 'swagger_client'\n# setup authorization\nSwaggerClient.configure do |config|\n  # Configure API key authorization: bearerAuth\n  config.api_key['Authorization'] = 'YOUR API KEY'\n  # Uncomment the following line to set a prefix for the API key, e.g. 'Bearer' (defaults to nil)\n  #config.api_key_prefix['Authorization'] = 'Bearer'\nend\n\napi_instance = SwaggerClient::PinningApi.new\n\ncid = 'cid_example' # String | cid\n\nname = 'name_example' # String | name\n\n\nbegin\n  #Add and pin object\n  api_instance.pinning_pins_post(cid, name)\nrescue SwaggerClient::ApiError => e\n  puts \"Exception when calling PinningApi->pinning_pins_post: #{e}\"\nend\n")),(0,i.kt)("h3",{id:"parameters-4"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Name"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"),(0,i.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"cid")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"String")),(0,i.kt)("td",{parentName:"tr",align:null},"cid"),(0,i.kt)("td",{parentName:"tr",align:null})),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"name")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"String")),(0,i.kt)("td",{parentName:"tr",align:null},"name"),(0,i.kt)("td",{parentName:"tr",align:null})))),(0,i.kt)("h3",{id:"return-type-4"},"Return type"),(0,i.kt)("p",null,"nil (empty response body)"),(0,i.kt)("h3",{id:"authorization-4"},"Authorization"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/estuary-documentation/clients/ruby/#bearerAuth"},"bearerAuth")),(0,i.kt)("h3",{id:"http-request-headers-4"},"HTTP request headers"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Content-Type"),": Not defined"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Accept"),": application/json")))}d.isMDXComponent=!0}}]);